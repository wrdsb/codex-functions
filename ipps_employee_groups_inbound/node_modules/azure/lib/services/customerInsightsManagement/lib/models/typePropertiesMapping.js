/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the TypePropertiesMapping class.
 * @constructor
 * Metadata for a Link's property mapping.
 *
 * @member {string} interactionTypePropertyName Property name on the source
 * Interaction Type.
 *
 * @member {string} profileTypePropertyName Property name on the target Profile
 * Type.
 *
 * @member {boolean} [isProfileTypeId] Flag to indicate whether the Profile
 * Type property is an id on the Profile Type.
 *
 * @member {string} [linkType] Link type. Possible values include:
 * 'UpdateAlways', 'CopyIfNull'
 *
 */
class TypePropertiesMapping {
  constructor() {
  }

  /**
   * Defines the metadata of TypePropertiesMapping
   *
   * @returns {object} metadata of TypePropertiesMapping
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TypePropertiesMapping',
      type: {
        name: 'Composite',
        className: 'TypePropertiesMapping',
        modelProperties: {
          interactionTypePropertyName: {
            required: true,
            serializedName: 'interactionTypePropertyName',
            type: {
              name: 'String'
            }
          },
          profileTypePropertyName: {
            required: true,
            serializedName: 'profileTypePropertyName',
            type: {
              name: 'String'
            }
          },
          isProfileTypeId: {
            required: false,
            serializedName: 'isProfileTypeId',
            type: {
              name: 'Boolean'
            }
          },
          linkType: {
            required: false,
            serializedName: 'linkType',
            type: {
              name: 'Enum',
              allowedValues: [ 'UpdateAlways', 'CopyIfNull' ]
            }
          }
        }
      }
    };
  }
}

module.exports = TypePropertiesMapping;
