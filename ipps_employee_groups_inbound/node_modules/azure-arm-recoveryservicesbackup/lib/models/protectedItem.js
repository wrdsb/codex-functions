/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ProtectedItem class.
 * @constructor
 * The base class for backup items.
 *
 * @member {string} [backupManagementType] The backup managemenent type
 * associated with the backup item. Possible values include: 'Invalid',
 * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql'
 *
 * @member {string} [workloadType] The workload type for this item. Possible
 * values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB',
 * 'Exchange', 'Sharepoint', 'DPMUnknown'
 *
 * @member {string} [sourceResourceId] The ID of the resource to be backed up.
 *
 * @member {string} [policyId] The ID of the backup policy associated with this
 * backup item.
 *
 * @member {date} [lastRecoveryPoint] The timestamp when the most recent backup
 * copy was created for this backup item.
 *
 * @member {string} protectedItemType Polymorphic Discriminator
 *
 */
class ProtectedItem {
  constructor() {
  }

  /**
   * Defines the metadata of ProtectedItem
   *
   * @returns {object} metadata of ProtectedItem
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ProtectedItem',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'protectedItemType',
          clientName: 'protectedItemType'
        },
        uberParent: 'ProtectedItem',
        className: 'ProtectedItem',
        modelProperties: {
          backupManagementType: {
            required: false,
            serializedName: 'backupManagementType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql' ]
            }
          },
          workloadType: {
            required: false,
            serializedName: 'workloadType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'DPMUnknown' ]
            }
          },
          sourceResourceId: {
            required: false,
            serializedName: 'sourceResourceId',
            type: {
              name: 'String'
            }
          },
          policyId: {
            required: false,
            serializedName: 'policyId',
            type: {
              name: 'String'
            }
          },
          lastRecoveryPoint: {
            required: false,
            serializedName: 'lastRecoveryPoint',
            type: {
              name: 'DateTime'
            }
          },
          protectedItemType: {
            required: true,
            serializedName: 'protectedItemType',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ProtectedItem;
