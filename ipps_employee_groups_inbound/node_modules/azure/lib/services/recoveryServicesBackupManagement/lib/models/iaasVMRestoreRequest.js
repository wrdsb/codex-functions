/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the IaasVMRestoreRequest class.
 * @constructor
 * IaaS VM workload-specific restore.
 *
 * @member {string} [recoveryPointId] The ID of the backup copy to be
 * recovered.
 *
 * @member {string} [recoveryType] The type of this recovery. Possible values
 * include: 'Invalid', 'OriginalLocation', 'AlternateLocation', 'RestoreDisks'
 *
 * @member {string} [sourceResourceId] The fully qualified Resource Manager ID
 * of the VM being recovered.
 *
 * @member {string} [targetVirtualMachineId] The complete Resource Manager ID
 * of the VM that will be created.
 * For example:
 * /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}
 *
 * @member {string} [targetResourceGroupId] The Resource Manager ID of the
 * resource group you're creating for this VM and other artifacts.
 * For example: /subscriptions/{subId}/resourcegroups/{rg}
 *
 * @member {string} [storageAccountId] The fully qualified Resource Manager ID
 * of the storage account where the VM will be restored.
 *
 * @member {string} [virtualNetworkId] This is the virtual network ID of the
 * vnet that is attached to the virtual machine.
 * Your join action permissions are validated during the linked access.
 *
 * @member {string} [subnetId] Subnet ID is the identifier for the VM to be
 * restored. For Classic VMs the subnet ID would be
 * {VnetID}/Subnet/{SubnetName}, and for the Resource Manager VMs, the subnet
 * ID would be the Resource Manager resource ID used to represent the subnet.
 *
 * @member {string} [targetDomainNameId] The fully qualified Resource Manager
 * ID of the domain name to be associated with the VM being restored. Use the
 * Resource Manager ID to identify the domain, only for Classic-deployed
 * virtual machines.
 *
 * @member {string} [region] The region where the virtual machine is restored.
 *
 * @member {string} [affinityGroup] The affinity group associated with the VM
 * to be restored. Affinity groups are used only for Classic-deployed virtual
 * machines.
 *
 * @member {boolean} [createNewCloudService] Asks the question if a new cloud
 * service should be created while restoring the VM. If the answer is false,
 * the VM is restored to the same cloud service.
 *
 * @member {object} [encryptionDetails] If the VM was encrypted at the time of
 * backup, these details are needed.
 *
 * @member {boolean} [encryptionDetails.encryptionEnabled] Identifies whether
 * the backup copy represents an encrypted VM at the time of backup.
 *
 * @member {string} [encryptionDetails.kekUrl] URL of the Key Encryption Key
 * (KEK).
 *
 * @member {string} [encryptionDetails.secretKeyUrl] URL of the Bitlocker
 * Encryption Key (BEK).
 *
 * @member {string} [encryptionDetails.kekVaultId] The ID of Key Vault where
 * the Key Encryption Key (KEK) is stored.
 *
 * @member {string} [encryptionDetails.secretKeyVaultId] The ID of Key Vault
 * where the Bitlocker Encryption Key (BEK), or Secret, is stored.
 *
 */
class IaasVMRestoreRequest extends models['RestoreRequest'] {
  constructor() {
    super();
  }

  /**
   * Defines the metadata of IaasVMRestoreRequest
   *
   * @returns {object} metadata of IaasVMRestoreRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IaasVMRestoreRequest',
      type: {
        name: 'Composite',
        className: 'IaasVMRestoreRequest',
        modelProperties: {
          objectType: {
            required: true,
            serializedName: 'objectType',
            type: {
              name: 'String'
            }
          },
          recoveryPointId: {
            required: false,
            serializedName: 'recoveryPointId',
            type: {
              name: 'String'
            }
          },
          recoveryType: {
            required: false,
            serializedName: 'recoveryType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Invalid', 'OriginalLocation', 'AlternateLocation', 'RestoreDisks' ]
            }
          },
          sourceResourceId: {
            required: false,
            serializedName: 'sourceResourceId',
            type: {
              name: 'String'
            }
          },
          targetVirtualMachineId: {
            required: false,
            serializedName: 'targetVirtualMachineId',
            type: {
              name: 'String'
            }
          },
          targetResourceGroupId: {
            required: false,
            serializedName: 'targetResourceGroupId',
            type: {
              name: 'String'
            }
          },
          storageAccountId: {
            required: false,
            serializedName: 'storageAccountId',
            type: {
              name: 'String'
            }
          },
          virtualNetworkId: {
            required: false,
            serializedName: 'virtualNetworkId',
            type: {
              name: 'String'
            }
          },
          subnetId: {
            required: false,
            serializedName: 'subnetId',
            type: {
              name: 'String'
            }
          },
          targetDomainNameId: {
            required: false,
            serializedName: 'targetDomainNameId',
            type: {
              name: 'String'
            }
          },
          region: {
            required: false,
            serializedName: 'region',
            type: {
              name: 'String'
            }
          },
          affinityGroup: {
            required: false,
            serializedName: 'affinityGroup',
            type: {
              name: 'String'
            }
          },
          createNewCloudService: {
            required: false,
            serializedName: 'createNewCloudService',
            type: {
              name: 'Boolean'
            }
          },
          encryptionDetails: {
            required: false,
            serializedName: 'encryptionDetails',
            type: {
              name: 'Composite',
              className: 'EncryptionDetails'
            }
          }
        }
      }
    };
  }
}

module.exports = IaasVMRestoreRequest;
