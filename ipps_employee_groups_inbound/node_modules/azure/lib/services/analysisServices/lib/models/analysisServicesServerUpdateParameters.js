/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the AnalysisServicesServerUpdateParameters class.
 * @constructor
 * Provision request specification
 *
 * @member {object} [sku] The SKU of the Analysis Services resource.
 *
 * @member {string} [sku.name] Name of the SKU level for the server being
 * provisioned. Possible values are: 'S1', 'S2', 'S4', and 'D1'. Possible
 * values include: 'S1', 'S2', 'S4', 'D1'
 *
 * @member {string} [sku.tier] The name of the Azure pricing tier to which the
 * SKU applies. Possible values are: 'Development' and 'Standard'. Possible
 * values include: 'Development', 'Standard'
 *
 * @member {object} [tags] Key-value pairs of additional provisioning
 * properties.
 *
 * @member {object} [asAdministrators]
 *
 * @member {array} [asAdministrators.members] An array of administrator user
 * identities.
 *
 * @member {object} [backupConfiguration]
 *
 * @member {string} [backupConfiguration.storageAccount] Storage account full
 * resource id for backup configuration
 *
 * @member {string} [backupConfiguration.blobContainer] The name of blob
 * container for backup configuration
 *
 * @member {string} [backupConfiguration.accessKey] The access key of storage
 * account used for backup configuration
 *
 */
class AnalysisServicesServerUpdateParameters {
  constructor() {
  }

  /**
   * Defines the metadata of AnalysisServicesServerUpdateParameters
   *
   * @returns {object} metadata of AnalysisServicesServerUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AnalysisServicesServerUpdateParameters',
      type: {
        name: 'Composite',
        className: 'AnalysisServicesServerUpdateParameters',
        modelProperties: {
          sku: {
            required: false,
            serializedName: 'sku',
            type: {
              name: 'Composite',
              className: 'ResourceSku'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          asAdministrators: {
            required: false,
            serializedName: 'properties.asAdministrators',
            type: {
              name: 'Composite',
              className: 'ServerAdministrators'
            }
          },
          backupConfiguration: {
            required: false,
            serializedName: 'properties.backupConfiguration',
            type: {
              name: 'Composite',
              className: 'BackupConfiguration'
            }
          }
        }
      }
    };
  }
}

module.exports = AnalysisServicesServerUpdateParameters;
