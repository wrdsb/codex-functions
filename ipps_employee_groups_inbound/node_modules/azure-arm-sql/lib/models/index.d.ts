/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the MaxSizeCapability class.
 * @constructor
 * The maximum size limits for a database.
 *
 * @member {number} [limit] The maximum size of the database (see 'unit' for
 * the units).
 *
 * @member {string} [unit] The units that the limit is expressed in. Possible
 * values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes'
 *
 * @member {string} [status] The status of the maximum size capability.
 * Possible values include: 'Visible', 'Available', 'Default', 'Disabled'
 *
 */
export interface MaxSizeCapability {
  readonly limit?: number;
  readonly unit?: string;
  readonly status?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceObjectiveCapability class.
 * @constructor
 * The service objectives capabilities.
 *
 * @member {string} [name] The service objective name.
 *
 * @member {string} [status] The status of the service objective. Possible
 * values include: 'Visible', 'Available', 'Default', 'Disabled'
 *
 * @member {string} [unit] Unit type used to measure service objective
 * performance level. Possible values include: 'DTU'
 *
 * @member {number} [value] Performance level value.
 *
 * @member {string} [id] The unique ID of the service objective.
 *
 * @member {array} [supportedMaxSizes] The list of supported maximum database
 * sizes for this service objective.
 *
 */
export interface ServiceObjectiveCapability {
  readonly name?: string;
  readonly status?: string;
  readonly unit?: string;
  readonly value?: number;
  readonly id?: string;
  readonly supportedMaxSizes?: MaxSizeCapability[];
}

/**
 * @class
 * Initializes a new instance of the EditionCapability class.
 * @constructor
 * The server edition capabilities.
 *
 * @member {string} [name] The edition name.
 *
 * @member {string} [status] The status of the server edition. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 *
 * @member {array} [supportedServiceLevelObjectives] The list of supported
 * service objectives for the edition.
 *
 */
export interface EditionCapability {
  readonly name?: string;
  readonly status?: string;
  readonly supportedServiceLevelObjectives?: ServiceObjectiveCapability[];
}

/**
 * @class
 * Initializes a new instance of the ServerVersionCapability class.
 * @constructor
 * The server capabilities.
 *
 * @member {string} [name] The server version name.
 *
 * @member {string} [status] The status of the server version. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 *
 * @member {array} [supportedEditions] The list of supported server editions.
 *
 */
export interface ServerVersionCapability {
  readonly name?: string;
  readonly status?: string;
  readonly supportedEditions?: EditionCapability[];
}

/**
 * @class
 * Initializes a new instance of the LocationCapabilities class.
 * @constructor
 * The capabilities for a location.
 *
 * @member {string} [name] The location name.
 *
 * @member {string} [status] Azure SQL Database's status for the location.
 * Possible values include: 'Visible', 'Available', 'Default', 'Disabled'
 *
 * @member {array} [supportedServerVersions] The list of supported server
 * versions.
 *
 */
export interface LocationCapabilities {
  readonly name?: string;
  readonly status?: string;
  readonly supportedServerVersions?: ServerVersionCapability[];
}

/**
 * @class
 * Initializes a new instance of the SubResource class.
 * @constructor
 * Subresource properties
 *
 * @member {string} [name] Resource name
 *
 * @member {string} [id] The resource ID.
 *
 */
export interface SubResource {
  readonly name?: string;
  readonly id?: string;
}

/**
 * @class
 * Initializes a new instance of the FirewallRule class.
 * @constructor
 * Represents a server firewall rule.
 *
 * @member {string} [kind] Kind of server that contains this firewall rule.
 *
 * @member {string} [location] Location of the server that contains this
 * firewall rule.
 *
 * @member {string} [type] Type of resource this is.
 *
 * @member {string} startIpAddress The start IP address of the firewall rule.
 * Must be IPv4 format. Use value '0.0.0.0' to represent all Azure-internal IP
 * addresses.
 *
 * @member {string} endIpAddress The end IP address of the firewall rule. Must
 * be IPv4 format. Must be greater than or equal to startIpAddress. Use value
 * '0.0.0.0' to represent all Azure-internal IP addresses.
 *
 */
export interface FirewallRule extends SubResource {
  readonly kind?: string;
  readonly location?: string;
  readonly type?: string;
  startIpAddress: string;
  endIpAddress: string;
}

/**
 * @class
 * Initializes a new instance of the FirewallRuleListResult class.
 * @constructor
 * Represents the response to a List Firewall Rules request.
 *
 * @member {array} [value] The list of server firewall rules.
 *
 */
export interface FirewallRuleListResult {
  value?: FirewallRule[];
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * ARM resource.
 *
 * @member {string} [id] Resource ID.
 *
 * @member {string} [name] Resource name.
 *
 * @member {string} [type] Resource type.
 *
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the TrackedResource class.
 * @constructor
 * ARM tracked top level resource.
 *
 * @member {object} [tags] Resource tags.
 *
 * @member {string} location Resource location.
 *
 */
export interface TrackedResource extends Resource {
  tags?: { [propertyName: string]: string };
  location: string;
}

/**
 * @class
 * Initializes a new instance of the ProxyResource class.
 * @constructor
 * ARM proxy resource.
 *
 */
export interface ProxyResource extends Resource {
}

/**
 * @class
 * Initializes a new instance of the ImportExtensionRequest class.
 * @constructor
 * Import database parameters.
 *
 * @member {string} [name] The name of the extension.
 *
 * @member {string} [type] The type of the extension.
 *
 * @member {string} storageKeyType The type of the storage key to use. Possible
 * values include: 'StorageAccessKey', 'SharedAccessKey'
 *
 * @member {string} storageKey The storage key to use.  If storage key type is
 * SharedAccessKey, it must be preceded with a "?."
 *
 * @member {string} storageUri The storage uri to use.
 *
 * @member {string} administratorLogin The name of the SQL administrator.
 *
 * @member {string} administratorLoginPassword The password of the SQL
 * administrator.
 *
 * @member {string} [authenticationType] The authentication type. Possible
 * values include: 'SQL', 'ADPassword'. Default value: 'SQL' .
 *
 */
export interface ImportExtensionRequest {
  name?: string;
  type?: string;
  storageKeyType: string;
  storageKey: string;
  storageUri: string;
  administratorLogin: string;
  administratorLoginPassword: string;
  authenticationType?: string;
}

/**
 * @class
 * Initializes a new instance of the ImportExportResponse class.
 * @constructor
 * Response for Import/Export Get operation.
 *
 * @member {string} [requestType] The request type of the operation.
 *
 * @member {uuid} [requestId] The request type of the operation.
 *
 * @member {string} [serverName] The name of the server.
 *
 * @member {string} [databaseName] The name of the database.
 *
 * @member {string} [status] The status message returned from the server.
 *
 * @member {string} [lastModifiedTime] The operation status last modified time.
 *
 * @member {string} [queuedTime] The operation queued time.
 *
 * @member {string} [blobUri] The blob uri.
 *
 * @member {string} [errorMessage] The error message returned from the server.
 *
 */
export interface ImportExportResponse extends ProxyResource {
  readonly requestType?: string;
  readonly requestId?: string;
  readonly serverName?: string;
  readonly databaseName?: string;
  readonly status?: string;
  readonly lastModifiedTime?: string;
  readonly queuedTime?: string;
  readonly blobUri?: string;
  readonly errorMessage?: string;
}

/**
 * @class
 * Initializes a new instance of the ExportRequest class.
 * @constructor
 * Export database parameters.
 *
 * @member {string} storageKeyType The type of the storage key to use. Possible
 * values include: 'StorageAccessKey', 'SharedAccessKey'
 *
 * @member {string} storageKey The storage key to use.  If storage key type is
 * SharedAccessKey, it must be preceded with a "?."
 *
 * @member {string} storageUri The storage uri to use.
 *
 * @member {string} administratorLogin The name of the SQL administrator.
 *
 * @member {string} administratorLoginPassword The password of the SQL
 * administrator.
 *
 * @member {string} [authenticationType] The authentication type. Possible
 * values include: 'SQL', 'ADPassword'. Default value: 'SQL' .
 *
 */
export interface ExportRequest {
  storageKeyType: string;
  storageKey: string;
  storageUri: string;
  administratorLogin: string;
  administratorLoginPassword: string;
  authenticationType?: string;
}

/**
 * @class
 * Initializes a new instance of the ImportRequest class.
 * @constructor
 * Import database parameters.
 *
 * @member {string} databaseName The name of the database to import.
 *
 * @member {string} edition The edition for the database being created.
 * Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium',
 * 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'
 *
 * @member {string} serviceObjectiveName The name of the service objective to
 * assign to the database. Possible values include: 'Basic', 'S0', 'S1', 'S2',
 * 'S3', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'System', 'System2',
 * 'ElasticPool'
 *
 * @member {string} maxSizeBytes The maximum size for the newly imported
 * database.
 *
 */
export interface ImportRequest extends ExportRequest {
  databaseName: string;
  edition: string;
  serviceObjectiveName: string;
  maxSizeBytes: string;
}

/**
 * @class
 * Initializes a new instance of the ReplicationLink class.
 * @constructor
 * Represents a database replication link.
 *
 * @member {string} [location] Location of the server that contains this
 * firewall rule.
 *
 * @member {string} [type] Type of resource this is.
 *
 * @member {boolean} [isTerminationAllowed] Legacy value indicating whether
 * termination is allowed.  Currently always returns true.
 *
 * @member {string} [replicationMode] Replication mode of this replication
 * link.
 *
 * @member {string} [partnerServer] The name of the server hosting the partner
 * database.
 *
 * @member {string} [partnerDatabase] The name of the partner database.
 *
 * @member {string} [partnerLocation] The Azure Region of the partner database.
 *
 * @member {string} [role] The role of the database in the replication link.
 * Possible values include: 'Primary', 'Secondary', 'NonReadableSecondary',
 * 'Source', 'Copy'
 *
 * @member {string} [partnerRole] The role of the partner database in the
 * replication link. Possible values include: 'Primary', 'Secondary',
 * 'NonReadableSecondary', 'Source', 'Copy'
 *
 * @member {date} [startTime] The start time for the replication link.
 *
 * @member {number} [percentComplete] The percentage of seeding complete for
 * the replication link.
 *
 * @member {string} [replicationState] The replication state for the
 * replication link. Possible values include: 'PENDING', 'SEEDING', 'CATCH_UP',
 * 'SUSPENDED'
 *
 */
export interface ReplicationLink extends SubResource {
  readonly location?: string;
  readonly type?: string;
  readonly isTerminationAllowed?: boolean;
  readonly replicationMode?: string;
  readonly partnerServer?: string;
  readonly partnerDatabase?: string;
  readonly partnerLocation?: string;
  readonly role?: string;
  readonly partnerRole?: string;
  readonly startTime?: Date;
  readonly percentComplete?: number;
  readonly replicationState?: string;
}

/**
 * @class
 * Initializes a new instance of the ReplicationLinkListResult class.
 * @constructor
 * Represents the response to a List database replication link request.
 *
 * @member {array} [value] The list of database replication links housed in the
 * database.
 *
 */
export interface ReplicationLinkListResult {
  value?: ReplicationLink[];
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPoolMetric class.
 * @constructor
 * Represents recommended elastic pool metric.
 *
 * @member {date} [dateTime] The time of metric (ISO8601 format).
 *
 * @member {number} [dtu] Gets or sets the DTUs (Database Transaction Units).
 * See
 * https://azure.microsoft.com/documentation/articles/sql-database-what-is-a-dtu/
 *
 * @member {number} [sizeGB] Gets or sets size in gigabytes.
 *
 */
export interface RecommendedElasticPoolMetric {
  dateTime?: Date;
  dtu?: number;
  sizeGB?: number;
}

/**
 * @class
 * Initializes a new instance of the SloUsageMetric class.
 * @constructor
 * Represents a Slo Usage Metric.
 *
 * @member {string} [serviceLevelObjective] The serviceLevelObjective for SLO
 * usage metric. Possible values include: 'Basic', 'S0', 'S1', 'S2', 'S3',
 * 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'System', 'System2',
 * 'ElasticPool'
 *
 * @member {uuid} [serviceLevelObjectiveId] The serviceLevelObjectiveId for SLO
 * usage metric.
 *
 * @member {number} [inRangeTimeRatio] Gets or sets inRangeTimeRatio for SLO
 * usage metric.
 *
 */
export interface SloUsageMetric {
  serviceLevelObjective?: string;
  serviceLevelObjectiveId?: string;
  inRangeTimeRatio?: number;
}

/**
 * @class
 * Initializes a new instance of the ServiceTierAdvisor class.
 * @constructor
 * Represents a Service Tier Advisor.
 *
 * @member {date} [observationPeriodStart] The observation period start
 * (ISO8601 format).
 *
 * @member {date} [observationPeriodEnd] The observation period start (ISO8601
 * format).
 *
 * @member {number} [activeTimeRatio] The activeTimeRatio for service tier
 * advisor.
 *
 * @member {number} [minDtu] Gets or sets minDtu for service tier advisor.
 *
 * @member {number} [avgDtu] Gets or sets avgDtu for service tier advisor.
 *
 * @member {number} [maxDtu] Gets or sets maxDtu for service tier advisor.
 *
 * @member {number} [maxSizeInGB] Gets or sets maxSizeInGB for service tier
 * advisor.
 *
 * @member {array} [serviceLevelObjectiveUsageMetrics] Gets or sets
 * serviceLevelObjectiveUsageMetrics for the service tier advisor.
 *
 * @member {string} [currentServiceLevelObjective] Gets or sets
 * currentServiceLevelObjective for service tier advisor.
 *
 * @member {uuid} [currentServiceLevelObjectiveId] Gets or sets
 * currentServiceLevelObjectiveId for service tier advisor.
 *
 * @member {string} [usageBasedRecommendationServiceLevelObjective] Gets or
 * sets usageBasedRecommendationServiceLevelObjective for service tier advisor.
 *
 * @member {uuid} [usageBasedRecommendationServiceLevelObjectiveId] Gets or
 * sets usageBasedRecommendationServiceLevelObjectiveId for service tier
 * advisor.
 *
 * @member {string} [databaseSizeBasedRecommendationServiceLevelObjective] Gets
 * or sets databaseSizeBasedRecommendationServiceLevelObjective for service
 * tier advisor.
 *
 * @member {uuid} [databaseSizeBasedRecommendationServiceLevelObjectiveId] Gets
 * or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service
 * tier advisor.
 *
 * @member {string} [disasterPlanBasedRecommendationServiceLevelObjective] Gets
 * or sets disasterPlanBasedRecommendationServiceLevelObjective for service
 * tier advisor.
 *
 * @member {uuid} [disasterPlanBasedRecommendationServiceLevelObjectiveId] Gets
 * or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service
 * tier advisor.
 *
 * @member {string} [overallRecommendationServiceLevelObjective] Gets or sets
 * overallRecommendationServiceLevelObjective for service tier advisor.
 *
 * @member {uuid} [overallRecommendationServiceLevelObjectiveId] Gets or sets
 * overallRecommendationServiceLevelObjectiveId for service tier advisor.
 *
 * @member {number} [confidence] Gets or sets confidence for service tier
 * advisor.
 *
 */
export interface ServiceTierAdvisor extends SubResource {
  readonly observationPeriodStart?: Date;
  readonly observationPeriodEnd?: Date;
  readonly activeTimeRatio?: number;
  readonly minDtu?: number;
  readonly avgDtu?: number;
  readonly maxDtu?: number;
  readonly maxSizeInGB?: number;
  readonly serviceLevelObjectiveUsageMetrics?: SloUsageMetric[];
  readonly currentServiceLevelObjective?: string;
  readonly currentServiceLevelObjectiveId?: string;
  readonly usageBasedRecommendationServiceLevelObjective?: string;
  readonly usageBasedRecommendationServiceLevelObjectiveId?: string;
  readonly databaseSizeBasedRecommendationServiceLevelObjective?: string;
  readonly databaseSizeBasedRecommendationServiceLevelObjectiveId?: string;
  readonly disasterPlanBasedRecommendationServiceLevelObjective?: string;
  readonly disasterPlanBasedRecommendationServiceLevelObjectiveId?: string;
  readonly overallRecommendationServiceLevelObjective?: string;
  readonly overallRecommendationServiceLevelObjectiveId?: string;
  readonly confidence?: number;
}

/**
 * @class
 * Initializes a new instance of the TransparentDataEncryption class.
 * @constructor
 * Represents a database transparent data encryption .
 *
 * @member {string} [status] The status of the database transparent data
 * encryption. Possible values include: 'Enabled', 'Disabled'
 *
 */
export interface TransparentDataEncryption extends SubResource {
  status?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationImpact class.
 * @constructor
 * Represents impact of an operation, both in absolute and relative terms.
 *
 * @member {string} [name] The name of the impact dimension.
 *
 * @member {string} [unit] The unit in which estimated impact to dimension is
 * measured.
 *
 * @member {number} [changeValueAbsolute] The absolute impact to dimension.
 *
 * @member {number} [changeValueRelative] The relative impact to dimension
 * (null if not applicable)
 *
 */
export interface OperationImpact {
  readonly name?: string;
  readonly unit?: string;
  readonly changeValueAbsolute?: number;
  readonly changeValueRelative?: number;
}

/**
 * @class
 * Initializes a new instance of the RecommendedIndex class.
 * @constructor
 * Represents a database recommended index.
 *
 * @member {string} [action] The proposed index action. You can create a
 * missing index, drop an unused index, or rebuild an existing index to improve
 * its performance. Possible values include: 'Create', 'Drop', 'Rebuild'
 *
 * @member {string} [state] The current recommendation state. Possible values
 * include: 'Active', 'Pending', 'Executing', 'Verifying', 'Pending Revert',
 * 'Reverting', 'Reverted', 'Ignored', 'Expired', 'Blocked', 'Success'
 *
 * @member {date} [created] The UTC datetime showing when this resource was
 * created (ISO8601 format).
 *
 * @member {date} [lastModified] The UTC datetime of when was this resource
 * last changed (ISO8601 format).
 *
 * @member {string} [indexType] The type of index (CLUSTERED, NONCLUSTERED,
 * COLUMNSTORE, CLUSTERED COLUMNSTORE). Possible values include: 'CLUSTERED',
 * 'NONCLUSTERED', 'COLUMNSTORE', 'CLUSTERED COLUMNSTORE'
 *
 * @member {string} [schema] The schema where table to build index over resides
 *
 * @member {string} [table] The table on which to build index.
 *
 * @member {array} [columns] Columns over which to build index
 *
 * @member {array} [includedColumns] The list of column names to be included in
 * the index
 *
 * @member {string} [indexScript] The full build index script
 *
 * @member {array} [estimatedImpact] The estimated impact of doing recommended
 * index action.
 *
 * @member {array} [reportedImpact] The values reported after index action is
 * complete.
 *
 */
export interface RecommendedIndex extends ProxyResource {
  readonly action?: string;
  readonly state?: string;
  readonly created?: Date;
  readonly lastModified?: Date;
  readonly indexType?: string;
  readonly schema?: string;
  readonly table?: string;
  readonly columns?: string[];
  readonly includedColumns?: string[];
  readonly indexScript?: string;
  readonly estimatedImpact?: OperationImpact[];
  readonly reportedImpact?: OperationImpact[];
}

/**
 * @class
 * Initializes a new instance of the Database class.
 * @constructor
 * Represents a database.
 *
 * @member {string} [kind] Kind of database.  This is metadata used for the
 * Azure portal experience.
 *
 * @member {string} [collation] The collation of the database. If createMode is
 * not Default, this value is ignored.
 *
 * @member {date} [creationDate] The creation date of the database (ISO8601
 * format).
 *
 * @member {number} [containmentState] The containment state of the database.
 *
 * @member {uuid} [currentServiceObjectiveId] The current service level
 * objective ID of the database. This is the ID of the service level objective
 * that is currently active.
 *
 * @member {string} [databaseId] The ID of the database.
 *
 * @member {date} [earliestRestoreDate] This records the earliest start date
 * and time that restore is available for this database (ISO8601 format).
 *
 * @member {string} [createMode] Specifies the mode of database creation.
 *
 * Default: regular database creation.
 *
 * Copy: creates a database as a copy of an existing database. sourceDatabaseId
 * must be specified as the resource ID of the source database.
 *
 * OnlineSecondary/NonReadableSecondary: creates a database as a (readable or
 * nonreadable) secondary replica of an existing database. sourceDatabaseId
 * must be specified as the resource ID of the existing primary database.
 *
 * PointInTimeRestore: Creates a database by restoring a point in time backup
 * of an existing database. sourceDatabaseId must be specified as the resource
 * ID of the existing database, and restorePointInTime must be specified.
 *
 * Recovery: Creates a database by restoring a geo-replicated backup.
 * sourceDatabaseId must be specified as the recoverable database resource ID
 * to restore.
 *
 * Restore: Creates a database by restoring a backup of a deleted database.
 * sourceDatabaseId must be specified. If sourceDatabaseId is the database's
 * original resource ID, then sourceDatabaseDeletionDate must be specified.
 * Otherwise sourceDatabaseId must be the restorable dropped database resource
 * ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be
 * specified to restore from an earlier point in time.
 *
 * RestoreLongTermRetentionBackup: Creates a database by restoring from a long
 * term retention vault. recoveryServicesRecoveryPointResourceId must be
 * specified as the recovery point resource ID.
 *
 * Copy, NonReadableSecondary, OnlineSecondary and
 * RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.
 * Possible values include: 'Copy', 'Default', 'NonReadableSecondary',
 * 'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',
 * 'RestoreLongTermRetentionBackup'
 *
 * @member {string} [sourceDatabaseId] Conditional. If createMode is Copy,
 * NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery, or
 * Restore, then this value is required. Specifies the resource ID of the
 * source database. If createMode is NonReadableSecondary or OnlineSecondary,
 * the name of the source database must be the same as the new database being
 * created.
 *
 * @member {date} [sourceDatabaseDeletionDate] Conditional. If createMode is
 * Restore and sourceDatabaseId is the deleted database's original resource id
 * when it existed (as opposed to its current restorable dropped database id),
 * then this value is required. Specifies the time that the database was
 * deleted.
 *
 * @member {date} [restorePointInTime] Conditional. If createMode is
 * PointInTimeRestore, this value is required. If createMode is Restore, this
 * value is optional. Specifies the point in time (ISO8601 format) of the
 * source database that will be restored to create the new database. Must be
 * greater than or equal to the source database's earliestRestoreDate value.
 *
 * @member {date} [recoveryServicesRecoveryPointResourceId] Conditional. If
 * createMode is RestoreLongTermRetentionBackup, then this value is required.
 * Specifies the resource ID of the recovery point to restore from.
 *
 * @member {string} [edition] The edition of the database. The DatabaseEditions
 * enumeration contains all the valid editions. If createMode is
 * NonReadableSecondary or OnlineSecondary, this value is ignored. To see
 * possible values, query the capabilities API
 * (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)
 * referred to by operationId: "Capabilities_ListByLocation.". Possible values
 * include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',
 * 'Stretch', 'DataWarehouse', 'System', 'System2'
 *
 * @member {string} [maxSizeBytes] The max size of the database expressed in
 * bytes. If createMode is not Default, this value is ignored. To see possible
 * values, query the capabilities API
 * (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)
 * referred to by operationId: "Capabilities_ListByLocation."
 *
 * @member {uuid} [requestedServiceObjectiveId] The configured service level
 * objective ID of the database. This is the service level objective that is in
 * the process of being applied to the database. Once successfully updated, it
 * will match the value of currentServiceObjectiveId property. If
 * requestedServiceObjectiveId and requestedServiceObjectiveName are both
 * updated, the value of requestedServiceObjectiveId overrides the value of
 * requestedServiceObjectiveName. To see possible values, query the
 * capabilities API
 * (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)
 * referred to by operationId: "Capabilities_ListByLocation."
 *
 * @member {string} [requestedServiceObjectiveName] The name of the configured
 * service level objective of the database. This is the service level objective
 * that is in the process of being applied to the database. Once successfully
 * updated, it will match the value of serviceLevelObjective property. To see
 * possible values, query the capabilities API
 * (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)
 * referred to by operationId: "Capabilities_ListByLocation.". Possible values
 * include: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6',
 * 'P11', 'P15', 'System', 'System2', 'ElasticPool'
 *
 * @member {string} [serviceLevelObjective] The current service level objective
 * of the database. Possible values include: 'Basic', 'S0', 'S1', 'S2', 'S3',
 * 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'System', 'System2',
 * 'ElasticPool'
 *
 * @member {string} [status] The status of the database.
 *
 * @member {string} [elasticPoolName] The name of the elastic pool the database
 * is in. If elasticPoolName and requestedServiceObjectiveName are both
 * updated, the value of requestedServiceObjectiveName is ignored. Not
 * supported for DataWarehouse edition.
 *
 * @member {string} [defaultSecondaryLocation] The default secondary region for
 * this database.
 *
 * @member {array} [serviceTierAdvisors] The list of service tier advisors for
 * this database. Expanded property
 *
 * @member {array} [transparentDataEncryption] The transparent data encryption
 * info for this database.
 *
 * @member {array} [recommendedIndex] The recommended indices for this
 * database.
 *
 * @member {uuid} [failoverGroupId] The id indicating the failover group
 * containing this database.
 *
 * @member {string} [readScale] Conditional. If the database is a
 * geo-secondary, readScale indicates whether read-only connections are allowed
 * to this database or not. Not supported for DataWarehouse edition. Possible
 * values include: 'Enabled', 'Disabled'
 *
 * @member {string} [sampleName] Indicates the name of the sample schema to
 * apply when creating this database. If createMode is not Default, this value
 * is ignored. Not supported for DataWarehouse edition. Possible values
 * include: 'AdventureWorksLT'
 *
 */
export interface Database extends TrackedResource {
  readonly kind?: string;
  collation?: string;
  readonly creationDate?: Date;
  readonly containmentState?: number;
  readonly currentServiceObjectiveId?: string;
  readonly databaseId?: string;
  readonly earliestRestoreDate?: Date;
  createMode?: string;
  sourceDatabaseId?: string;
  sourceDatabaseDeletionDate?: Date;
  restorePointInTime?: Date;
  recoveryServicesRecoveryPointResourceId?: Date;
  edition?: string;
  maxSizeBytes?: string;
  requestedServiceObjectiveId?: string;
  requestedServiceObjectiveName?: string;
  readonly serviceLevelObjective?: string;
  readonly status?: string;
  elasticPoolName?: string;
  readonly defaultSecondaryLocation?: string;
  readonly serviceTierAdvisors?: ServiceTierAdvisor[];
  readonly transparentDataEncryption?: TransparentDataEncryption[];
  readonly recommendedIndex?: RecommendedIndex[];
  readonly failoverGroupId?: string;
  readScale?: string;
  sampleName?: string;
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPool class.
 * @constructor
 * Represents a recommented elastic pool.
 *
 * @member {string} [databaseEdition] The edition of the recommended elastic
 * pool. The ElasticPoolEdition enumeration contains all the valid editions.
 * Possible values include: 'Basic', 'Standard', 'Premium'
 *
 * @member {number} [dtu] The DTU for the recommended elastic pool.
 *
 * @member {number} [databaseDtuMin] The minimum DTU for the database.
 *
 * @member {number} [databaseDtuMax] The maximum DTU for the database.
 *
 * @member {number} [storageMB] Gets storage size in megabytes.
 *
 * @member {date} [observationPeriodStart] The observation period start
 * (ISO8601 format).
 *
 * @member {date} [observationPeriodEnd] The observation period start (ISO8601
 * format).
 *
 * @member {number} [maxObservedDtu] Gets maximum observed DTU.
 *
 * @member {number} [maxObservedStorageMB] Gets maximum observed storage in
 * megabytes.
 *
 * @member {array} [databases] The list of databases in this pool. Expanded
 * property
 *
 * @member {array} [metrics] The list of databases housed in the server.
 * Expanded property
 *
 */
export interface RecommendedElasticPool extends ProxyResource {
  readonly databaseEdition?: string;
  dtu?: number;
  databaseDtuMin?: number;
  databaseDtuMax?: number;
  storageMB?: number;
  readonly observationPeriodStart?: Date;
  readonly observationPeriodEnd?: Date;
  readonly maxObservedDtu?: number;
  readonly maxObservedStorageMB?: number;
  readonly databases?: Database[];
  readonly metrics?: RecommendedElasticPoolMetric[];
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPoolListResult class.
 * @constructor
 * Represents the response to a list recommended elastic pool request.
 *
 * @member {array} value The list of recommended elastic pools hosted in the
 * server.
 *
 */
export interface RecommendedElasticPoolListResult {
  value: RecommendedElasticPool[];
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPoolListMetricsResult class.
 * @constructor
 * Represents the response to a list recommended elastic pool metrics request.
 *
 * @member {array} value The list of recommended elastic pools metrics.
 *
 */
export interface RecommendedElasticPoolListMetricsResult {
  value: RecommendedElasticPoolMetric[];
}

/**
 * @class
 * Initializes a new instance of the ElasticPool class.
 * @constructor
 * Represents a database elastic pool.
 *
 * @member {date} [creationDate] The creation date of the elastic pool (ISO8601
 * format).
 *
 * @member {string} [state] The state of the elastic pool. Possible values
 * include: 'Creating', 'Ready', 'Disabled'
 *
 * @member {string} [edition] The edition of the elastic pool. Possible values
 * include: 'Basic', 'Standard', 'Premium'
 *
 * @member {number} [dtu] The total shared DTU for the database elastic pool.
 *
 * @member {number} [databaseDtuMax] The maximum DTU any one database can
 * consume.
 *
 * @member {number} [databaseDtuMin] The minimum DTU all databases are
 * guaranteed.
 *
 * @member {number} [storageMB] Gets storage limit for the database elastic
 * pool in MB.
 *
 * @member {string} [kind] Kind of elastic pool.  This is metadata used for the
 * Azure portal experience.
 *
 */
export interface ElasticPool extends TrackedResource {
  readonly creationDate?: Date;
  readonly state?: string;
  edition?: string;
  dtu?: number;
  databaseDtuMax?: number;
  databaseDtuMin?: number;
  storageMB?: number;
  readonly kind?: string;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolListResult class.
 * @constructor
 * Represents the response to a list elastic pool request.
 *
 * @member {array} value The list of elastic pools hosted in the server.
 *
 */
export interface ElasticPoolListResult {
  value: ElasticPool[];
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolActivity class.
 * @constructor
 * Represents the activity on an elastic pool.
 *
 * @member {string} [location] The geo-location where the resource lives
 *
 * @member {date} [endTime] The time the operation finished (ISO8601 format).
 *
 * @member {number} [errorCode] The error code if available.
 *
 * @member {string} [errorMessage] The error message if available.
 *
 * @member {number} [errorSeverity] The error severity if available.
 *
 * @member {string} [operation] The operation name.
 *
 * @member {string} [operationId] The unique operation ID.
 *
 * @member {number} [percentComplete] The percentage complete if available.
 *
 * @member {number} [requestedDatabaseDtuMax] The requested max DTU per
 * database if available.
 *
 * @member {number} [requestedDatabaseDtuMin] The requested min DTU per
 * database if available.
 *
 * @member {number} [requestedDtu] The requested DTU for the pool if available.
 *
 * @member {string} [requestedElasticPoolName] The requested name for the
 * elastic pool if available.
 *
 * @member {number} [requestedStorageLimitInGB] The requested storage limit for
 * the pool in GB if available.
 *
 * @member {string} [elasticPoolName] The name of the elastic pool.
 *
 * @member {string} [serverName] The name of the server the elastic pool is in.
 *
 * @member {date} [startTime] The time the operation started (ISO8601 format).
 *
 * @member {string} [state] The current state of the operation.
 *
 * @member {number} [requestedStorageLimitInMB] The requested storage limit in
 * MB.
 *
 * @member {number} [requestedDatabaseDtuGuarantee] The requested per database
 * DTU guarantee.
 *
 * @member {number} [requestedDatabaseDtuCap] The requested per database DTU
 * cap.
 *
 * @member {number} [requestedDtuGuarantee] The requested DTU guarantee.
 *
 */
export interface ElasticPoolActivity extends ProxyResource {
  location?: string;
  readonly endTime?: Date;
  readonly errorCode?: number;
  readonly errorMessage?: string;
  readonly errorSeverity?: number;
  readonly operation?: string;
  readonly operationId?: string;
  readonly percentComplete?: number;
  readonly requestedDatabaseDtuMax?: number;
  readonly requestedDatabaseDtuMin?: number;
  readonly requestedDtu?: number;
  readonly requestedElasticPoolName?: string;
  readonly requestedStorageLimitInGB?: number;
  readonly elasticPoolName?: string;
  readonly serverName?: string;
  readonly startTime?: Date;
  readonly state?: string;
  readonly requestedStorageLimitInMB?: number;
  readonly requestedDatabaseDtuGuarantee?: number;
  readonly requestedDatabaseDtuCap?: number;
  readonly requestedDtuGuarantee?: number;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolActivityListResult class.
 * @constructor
 * Represents the response to a list elastic pool activity request.
 *
 * @member {array} value The list of elastic pool activities.
 *
 */
export interface ElasticPoolActivityListResult {
  value: ElasticPoolActivity[];
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolDatabaseActivity class.
 * @constructor
 * Represents the activity on an elastic pool.
 *
 * @member {string} [location] The geo-location where the resource lives
 *
 * @member {string} [databaseName] The database name.
 *
 * @member {date} [endTime] The time the operation finished (ISO8601 format).
 *
 * @member {number} [errorCode] The error code if available.
 *
 * @member {string} [errorMessage] The error message if available.
 *
 * @member {number} [errorSeverity] The error severity if available.
 *
 * @member {string} [operation] The operation name.
 *
 * @member {uuid} [operationId] The unique operation ID.
 *
 * @member {number} [percentComplete] The percentage complete if available.
 *
 * @member {string} [requestedElasticPoolName] The name for the elastic pool
 * the database is moving into if available.
 *
 * @member {string} [currentElasticPoolName] The name of the current elastic
 * pool the database is in if available.
 *
 * @member {string} [currentServiceObjective] The name of the current service
 * objective if available.
 *
 * @member {string} [requestedServiceObjective] The name of the requested
 * service objective if available.
 *
 * @member {string} [serverName] The name of the server the elastic pool is in.
 *
 * @member {date} [startTime] The time the operation started (ISO8601 format).
 *
 * @member {string} [state] The current state of the operation.
 *
 */
export interface ElasticPoolDatabaseActivity extends ProxyResource {
  location?: string;
  readonly databaseName?: string;
  readonly endTime?: Date;
  readonly errorCode?: number;
  readonly errorMessage?: string;
  readonly errorSeverity?: number;
  readonly operation?: string;
  readonly operationId?: string;
  readonly percentComplete?: number;
  readonly requestedElasticPoolName?: string;
  readonly currentElasticPoolName?: string;
  readonly currentServiceObjective?: string;
  readonly requestedServiceObjective?: string;
  readonly serverName?: string;
  readonly startTime?: Date;
  readonly state?: string;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolDatabaseActivityListResult class.
 * @constructor
 * Represents the response to a list elastic pool database activity request.
 *
 * @member {array} value The list of elastic pool database activities.
 *
 */
export interface ElasticPoolDatabaseActivityListResult {
  value: ElasticPoolDatabaseActivity[];
}

/**
 * @class
 * Initializes a new instance of the Server class.
 * @constructor
 * Represents a server.
 *
 * @member {string} [kind] Kind of sql server.  This is metadata used for the
 * Azure portal experience.
 *
 * @member {string} [fullyQualifiedDomainName] The fully qualified domain name
 * of the server.
 *
 * @member {string} [version] The version of the server. Possible values
 * include: '2.0', '12.0'
 *
 * @member {string} [administratorLogin] Administrator username for the server.
 * Can only be specified when the server is being created (and is required for
 * creation).
 *
 * @member {string} [administratorLoginPassword] The administrator login
 * password (required for server creation).
 *
 * @member {uuid} [externalAdministratorSid] The ID of the Active Azure
 * Directory object with admin permissions on this server. Legacy parameter,
 * always null. To check for Active Directory admin, query
 * .../servers/{serverName}/administrators.
 *
 * @member {string} [externalAdministratorLogin] The display name of the Azure
 * Active Directory object with admin permissions on this server. Legacy
 * parameter, always null. To check for Active Directory admin, query
 * .../servers/{serverName}/administrators
 *
 * @member {string} [state] The state of the server. Possible values include:
 * 'Ready', 'Disabled'
 *
 */
export interface Server extends TrackedResource {
  readonly kind?: string;
  readonly fullyQualifiedDomainName?: string;
  version?: string;
  administratorLogin?: string;
  administratorLoginPassword?: string;
  readonly externalAdministratorSid?: string;
  readonly externalAdministratorLogin?: string;
  readonly state?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerListResult class.
 * @constructor
 * Represents the response to a get server request.
 *
 * @member {array} value The list of servers.
 *
 */
export interface ServerListResult {
  value: Server[];
}

/**
 * @class
 * Initializes a new instance of the DatabaseListResult class.
 * @constructor
 * Represents the response to a list database request.
 *
 * @member {array} value The list of databases housed in the server.
 *
 */
export interface DatabaseListResult {
  value: Database[];
}

/**
 * @class
 * Initializes a new instance of the RestorePoint class.
 * @constructor
 * Represents a database restore point.
 *
 * @member {string} [restorePointType] The restore point type of the database
 * restore point. Possible values include: 'DISCRETE', 'CONTINUOUS'
 *
 * @member {date} [restorePointCreationDate] Restore point creation time
 * (ISO8601 format). Populated when restorePointType = CONTINUOUS. Null
 * otherwise.
 *
 * @member {date} [earliestRestoreDate] Earliest restore time (ISO8601 format).
 * Populated when restorePointType = DISCRETE. Null otherwise.
 *
 */
export interface RestorePoint extends ProxyResource {
  readonly restorePointType?: string;
  readonly restorePointCreationDate?: Date;
  readonly earliestRestoreDate?: Date;
}

/**
 * @class
 * Initializes a new instance of the RestorePointListResult class.
 * @constructor
 * Represents the response to a list database restore points request.
 *
 * @member {array} value The list of a given database restore points.
 *
 */
export interface RestorePointListResult {
  value: RestorePoint[];
}

/**
 * @class
 * Initializes a new instance of the DatabaseMetric class.
 * @constructor
 * Represents database metrics.
 *
 * @member {string} [resourceName] The name of the resource.
 *
 * @member {string} [displayName] The metric display name.
 *
 * @member {number} [currentValue] The current value of the metric.
 *
 * @member {number} [limit] The current limit of the metric.
 *
 * @member {string} [unit] The units of the metric.
 *
 * @member {date} [nextResetTime] The next reset time for the metric (ISO8601
 * format).
 *
 */
export interface DatabaseMetric extends SubResource {
  readonly resourceName?: string;
  readonly displayName?: string;
  readonly currentValue?: number;
  readonly limit?: number;
  readonly unit?: string;
  readonly nextResetTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the DatabaseMetricListResult class.
 * @constructor
 * Represents the response to a list database metrics request.
 *
 * @member {array} value The list of database metrics for the database.
 *
 */
export interface DatabaseMetricListResult {
  value: DatabaseMetric[];
}

/**
 * @class
 * Initializes a new instance of the ServerMetric class.
 * @constructor
 * Represents server metrics.
 *
 * @member {string} [name] Name of the server usage metric.
 *
 * @member {string} [resourceName] The name of the resource.
 *
 * @member {string} [displayName] The metric display name.
 *
 * @member {number} [currentValue] The current value of the metric.
 *
 * @member {number} [limit] The current limit of the metric.
 *
 * @member {string} [unit] The units of the metric.
 *
 * @member {date} [nextResetTime] The next reset time for the metric (ISO8601
 * format).
 *
 */
export interface ServerMetric {
  readonly name?: string;
  readonly resourceName?: string;
  readonly displayName?: string;
  readonly currentValue?: number;
  readonly limit?: number;
  readonly unit?: string;
  readonly nextResetTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the ServerMetricListResult class.
 * @constructor
 * Represents the response to a list server metrics request.
 *
 * @member {array} value The list of server metrics for the server.
 *
 */
export interface ServerMetricListResult {
  value: ServerMetric[];
}

/**
 * @class
 * Initializes a new instance of the ServiceTierAdvisorListResult class.
 * @constructor
 * Represents the response to a list service tier advisor request.
 *
 * @member {array} value The list of service tier advisors for specified
 * database.
 *
 */
export interface ServiceTierAdvisorListResult {
  value: ServiceTierAdvisor[];
}

/**
 * @class
 * Initializes a new instance of the ServiceObjective class.
 * @constructor
 * Represents a database service objective.
 *
 * @member {string} [serviceObjectiveName] The name for the service objective.
 *
 * @member {boolean} [isDefault] Gets whether the service level objective is
 * the default service objective.
 *
 * @member {boolean} [isSystem] Gets whether the service level objective is a
 * system service objective.
 *
 * @member {string} [description] The description for the service level
 * objective.
 *
 * @member {boolean} [enabled] Gets whether the service level objective is
 * enabled.
 *
 */
export interface ServiceObjective extends SubResource {
  readonly serviceObjectiveName?: string;
  readonly isDefault?: boolean;
  readonly isSystem?: boolean;
  readonly description?: string;
  readonly enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ServiceObjectiveListResult class.
 * @constructor
 * Represents the response to a get database service objectives request.
 *
 * @member {array} value The list of database service objectives.
 *
 */
export interface ServiceObjectiveListResult {
  value: ServiceObjective[];
}

/**
 * @class
 * Initializes a new instance of the TransparentDataEncryptionActivity class.
 * @constructor
 * Represents a database transparent data encryption Scan.
 *
 * @member {string} [status] The status of the database. Possible values
 * include: 'Encrypting', 'Decrypting'
 *
 * @member {number} [percentComplete] The percent complete of the transparent
 * data encryption scan for a database.
 *
 */
export interface TransparentDataEncryptionActivity extends SubResource {
  readonly status?: string;
  readonly percentComplete?: number;
}

/**
 * @class
 * Initializes a new instance of the TransparentDataEncryptionActivityListResult class.
 * @constructor
 * Represents the response to a list database transparent data encryption
 * activity request.
 *
 * @member {array} value The list of database transparent data encryption
 * activities.
 *
 */
export interface TransparentDataEncryptionActivityListResult {
  value: TransparentDataEncryptionActivity[];
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * Display metadata associated with the operation.
 *
 * @member {string} [provider] Service provider: Microsoft SQL Database.
 *
 * @member {string} [resource] Resource on which the operation is performed:
 * Server, Database, etc.
 *
 * @member {string} [operation] Type of operation: get, read, delete, etc.
 *
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * SQL REST API operation definition.
 *
 * @member {string} [name] Operation name: {provider}/{resource}/{operation}
 *
 * @member {object} [display] Display metadata associated with the operation.
 *
 * @member {string} [display.provider] Service provider: Microsoft SQL
 * Database.
 *
 * @member {string} [display.resource] Resource on which the operation is
 * performed: Server, Database, etc.
 *
 * @member {string} [display.operation] Type of operation: get, read, delete,
 * etc.
 *
 */
export interface Operation {
  name?: string;
  display?: OperationDisplay;
}

/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list SQL operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @member {array} [value] List of SQL operations supported by the SQL resource
 * provider.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 *
 */
export interface OperationListResult {
  value?: Operation[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DatabaseSecurityAlertPolicy class.
 * @constructor
 * Contains information about a database Threat Detection policy.
 *
 * @member {string} [location] The geo-location where the resource lives
 *
 * @member {string} [kind] Resource kind.
 *
 * @member {string} state Specifies the state of the policy. If state is
 * Enabled, storageEndpoint and storageAccountAccessKey are required. Possible
 * values include: 'New', 'Enabled', 'Disabled'
 *
 * @member {string} [disabledAlerts] Specifies the semicolon-separated list of
 * alerts that are disabled, or empty string to disable no alerts. Possible
 * values: Sql_Injection; Sql_Injection_Vulnerability; Access_Anomaly;
 * Usage_Anomaly.
 *
 * @member {string} [emailAddresses] Specifies the semicolon-separated list of
 * e-mail addresses to which the alert is sent.
 *
 * @member {string} [emailAccountAdmins] Specifies that the alert is sent to
 * the account administrators. Possible values include: 'Enabled', 'Disabled'
 *
 * @member {string} [storageEndpoint] Specifies the blob storage endpoint (e.g.
 * https://MyAccount.blob.core.windows.net). This blob storage will hold all
 * Threat Detection audit logs. If state is Enabled, storageEndpoint is
 * required.
 *
 * @member {string} [storageAccountAccessKey] Specifies the identifier key of
 * the Threat Detection audit storage account. If state is Enabled,
 * storageAccountAccessKey is required.
 *
 * @member {number} [retentionDays] Specifies the number of days to keep in the
 * Threat Detection audit logs.
 *
 * @member {string} [useServerDefault] Specifies whether to use the default
 * server policy. Possible values include: 'Enabled', 'Disabled'
 *
 */
export interface DatabaseSecurityAlertPolicy extends ProxyResource {
  location?: string;
  readonly kind?: string;
  state: string;
  disabledAlerts?: string;
  emailAddresses?: string;
  emailAccountAdmins?: string;
  storageEndpoint?: string;
  storageAccountAccessKey?: string;
  retentionDays?: number;
  useServerDefault?: string;
}

/**
 * @class
 * Initializes a new instance of the DatabaseBlobAuditingPolicy class.
 * @constructor
 * Contains information about a database Blob Auditing policy.
 *
 * @member {string} [location] The geo-location where the resource lives
 *
 * @member {string} [kind] Resource kind.
 *
 * @member {string} state Specifies the state of the policy. If state is
 * Enabled, storageEndpoint and storageAccountAccessKey are required. Possible
 * values include: 'Enabled', 'Disabled'
 *
 * @member {string} [storageEndpoint] Specifies the blob storage endpoint (e.g.
 * https://MyAccount.blob.core.windows.net). If state is Enabled,
 * storageEndpoint is required.
 *
 * @member {string} [storageAccountAccessKey] Specifies the identifier key of
 * the auditing storage account. If state is Enabled, storageAccountAccessKey
 * is required.
 *
 * @member {number} [retentionDays] Specifies the number of days to keep in the
 * audit logs.
 *
 * @member {array} [auditActionsAndGroups] Specifies the Actions and
 * Actions-Groups to audit.
 *
 * @member {string} [storageAccountSubscriptionId] Specifies the blob storage
 * subscription Id.
 *
 * @member {boolean} [isStorageSecondaryKeyInUse] Specifies whether
 * storageAccountAccessKey value is the storage’s secondary key.
 *
 */
export interface DatabaseBlobAuditingPolicy extends ProxyResource {
  location?: string;
  readonly kind?: string;
  state: string;
  storageEndpoint?: string;
  storageAccountAccessKey?: string;
  retentionDays?: number;
  auditActionsAndGroups?: string[];
  storageAccountSubscriptionId?: string;
  isStorageSecondaryKeyInUse?: boolean;
}

/**
 * @class
 * Initializes a new instance of the FirewallRuleListResult class.
 * @constructor
 * Represents the response to a List Firewall Rules request.
 *
 * @member {array} [value] The list of server firewall rules.
 *
 */
export interface FirewallRuleListResult {
  value?: FirewallRule[];
}

/**
 * @class
 * Initializes a new instance of the ReplicationLinkListResult class.
 * @constructor
 * Represents the response to a List database replication link request.
 *
 * @member {array} [value] The list of database replication links housed in the
 * database.
 *
 */
export interface ReplicationLinkListResult {
  value?: ReplicationLink[];
}

/**
 * @class
 * Initializes a new instance of the RestorePointListResult class.
 * @constructor
 * Represents the response to a list database restore points request.
 *
 * @member {array} value The list of a given database restore points.
 *
 */
export interface RestorePointListResult {
  value: RestorePoint[];
}

/**
 * @class
 * Initializes a new instance of the DatabaseListResult class.
 * @constructor
 * Represents the response to a list database request.
 *
 * @member {array} value The list of databases housed in the server.
 *
 */
export interface DatabaseListResult {
  value: Database[];
}

/**
 * @class
 * Initializes a new instance of the DatabaseMetricListResult class.
 * @constructor
 * Represents the response to a list database metrics request.
 *
 * @member {array} value The list of database metrics for the database.
 *
 */
export interface DatabaseMetricListResult {
  value: DatabaseMetric[];
}

/**
 * @class
 * Initializes a new instance of the ServiceTierAdvisorListResult class.
 * @constructor
 * Represents the response to a list service tier advisor request.
 *
 * @member {array} value The list of service tier advisors for specified
 * database.
 *
 */
export interface ServiceTierAdvisorListResult {
  value: ServiceTierAdvisor[];
}

/**
 * @class
 * Initializes a new instance of the TransparentDataEncryptionActivityListResult class.
 * @constructor
 * Represents the response to a list database transparent data encryption
 * activity request.
 *
 * @member {array} value The list of database transparent data encryption
 * activities.
 *
 */
export interface TransparentDataEncryptionActivityListResult {
  value: TransparentDataEncryptionActivity[];
}

/**
 * @class
 * Initializes a new instance of the ServerListResult class.
 * @constructor
 * Represents the response to a get server request.
 *
 * @member {array} value The list of servers.
 *
 */
export interface ServerListResult {
  value: Server[];
}

/**
 * @class
 * Initializes a new instance of the ServerMetricListResult class.
 * @constructor
 * Represents the response to a list server metrics request.
 *
 * @member {array} value The list of server metrics for the server.
 *
 */
export interface ServerMetricListResult {
  value: ServerMetric[];
}

/**
 * @class
 * Initializes a new instance of the ServiceObjectiveListResult class.
 * @constructor
 * Represents the response to a get database service objectives request.
 *
 * @member {array} value The list of database service objectives.
 *
 */
export interface ServiceObjectiveListResult {
  value: ServiceObjective[];
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolListResult class.
 * @constructor
 * Represents the response to a list elastic pool request.
 *
 * @member {array} value The list of elastic pools hosted in the server.
 *
 */
export interface ElasticPoolListResult {
  value: ElasticPool[];
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolActivityListResult class.
 * @constructor
 * Represents the response to a list elastic pool activity request.
 *
 * @member {array} value The list of elastic pool activities.
 *
 */
export interface ElasticPoolActivityListResult {
  value: ElasticPoolActivity[];
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolDatabaseActivityListResult class.
 * @constructor
 * Represents the response to a list elastic pool database activity request.
 *
 * @member {array} value The list of elastic pool database activities.
 *
 */
export interface ElasticPoolDatabaseActivityListResult {
  value: ElasticPoolDatabaseActivity[];
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPoolListResult class.
 * @constructor
 * Represents the response to a list recommended elastic pool request.
 *
 * @member {array} value The list of recommended elastic pools hosted in the
 * server.
 *
 */
export interface RecommendedElasticPoolListResult {
  value: RecommendedElasticPool[];
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPoolListMetricsResult class.
 * @constructor
 * Represents the response to a list recommended elastic pool metrics request.
 *
 * @member {array} value The list of recommended elastic pools metrics.
 *
 */
export interface RecommendedElasticPoolListMetricsResult {
  value: RecommendedElasticPoolMetric[];
}


/**
 * @class
 * Initializes a new instance of the FirewallRuleListResult class.
 * @constructor
 * Represents the response to a List Firewall Rules request.
 *
 */
export interface FirewallRuleListResult extends Array<FirewallRule> {
}

/**
 * @class
 * Initializes a new instance of the ReplicationLinkListResult class.
 * @constructor
 * Represents the response to a List database replication link request.
 *
 */
export interface ReplicationLinkListResult extends Array<ReplicationLink> {
}

/**
 * @class
 * Initializes a new instance of the RestorePointListResult class.
 * @constructor
 * Represents the response to a list database restore points request.
 *
 */
export interface RestorePointListResult extends Array<RestorePoint> {
}

/**
 * @class
 * Initializes a new instance of the DatabaseListResult class.
 * @constructor
 * Represents the response to a list database request.
 *
 */
export interface DatabaseListResult extends Array<Database> {
}

/**
 * @class
 * Initializes a new instance of the DatabaseMetricListResult class.
 * @constructor
 * Represents the response to a list database metrics request.
 *
 */
export interface DatabaseMetricListResult extends Array<DatabaseMetric> {
}

/**
 * @class
 * Initializes a new instance of the ServiceTierAdvisorListResult class.
 * @constructor
 * Represents the response to a list service tier advisor request.
 *
 */
export interface ServiceTierAdvisorListResult extends Array<ServiceTierAdvisor> {
}

/**
 * @class
 * Initializes a new instance of the TransparentDataEncryptionActivityListResult class.
 * @constructor
 * Represents the response to a list database transparent data encryption
 * activity request.
 *
 */
export interface TransparentDataEncryptionActivityListResult extends Array<TransparentDataEncryptionActivity> {
}

/**
 * @class
 * Initializes a new instance of the ServerListResult class.
 * @constructor
 * Represents the response to a get server request.
 *
 */
export interface ServerListResult extends Array<Server> {
}

/**
 * @class
 * Initializes a new instance of the ServerMetricListResult class.
 * @constructor
 * Represents the response to a list server metrics request.
 *
 */
export interface ServerMetricListResult extends Array<ServerMetric> {
}

/**
 * @class
 * Initializes a new instance of the ServiceObjectiveListResult class.
 * @constructor
 * Represents the response to a get database service objectives request.
 *
 */
export interface ServiceObjectiveListResult extends Array<ServiceObjective> {
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolListResult class.
 * @constructor
 * Represents the response to a list elastic pool request.
 *
 */
export interface ElasticPoolListResult extends Array<ElasticPool> {
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolActivityListResult class.
 * @constructor
 * Represents the response to a list elastic pool activity request.
 *
 */
export interface ElasticPoolActivityListResult extends Array<ElasticPoolActivity> {
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolDatabaseActivityListResult class.
 * @constructor
 * Represents the response to a list elastic pool database activity request.
 *
 */
export interface ElasticPoolDatabaseActivityListResult extends Array<ElasticPoolDatabaseActivity> {
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPoolListResult class.
 * @constructor
 * Represents the response to a list recommended elastic pool request.
 *
 */
export interface RecommendedElasticPoolListResult extends Array<RecommendedElasticPool> {
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPoolListMetricsResult class.
 * @constructor
 * Represents the response to a list recommended elastic pool metrics request.
 *
 */
export interface RecommendedElasticPoolListMetricsResult extends Array<RecommendedElasticPoolMetric> {
}
