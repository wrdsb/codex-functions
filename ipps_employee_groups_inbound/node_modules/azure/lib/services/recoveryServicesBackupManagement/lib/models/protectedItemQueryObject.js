/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ProtectedItemQueryObject class.
 * @constructor
 * Filters the list of backup items.
 *
 * @member {string} [backupManagementType] The backup management type
 * associated with an item. Possible values include: 'Invalid', 'AzureIaasVM',
 * 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql'
 *
 * @member {string} [itemType] The workload type associated with an item.
 * Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb',
 * 'SQLDB', 'Exchange', 'Sharepoint', 'DPMUnknown'
 *
 * @member {string} [policyName] The name of the backup policy associated with
 * the item.
 *
 * @member {string} [containerName] The name of the container.
 *
 */
class ProtectedItemQueryObject {
  constructor() {
  }

  /**
   * Defines the metadata of ProtectedItemQueryObject
   *
   * @returns {object} metadata of ProtectedItemQueryObject
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ProtectedItemQueryObject',
      type: {
        name: 'Composite',
        className: 'ProtectedItemQueryObject',
        modelProperties: {
          backupManagementType: {
            required: false,
            serializedName: 'backupManagementType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql' ]
            }
          },
          itemType: {
            required: false,
            serializedName: 'itemType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'DPMUnknown' ]
            }
          },
          policyName: {
            required: false,
            serializedName: 'policyName',
            type: {
              name: 'String'
            }
          },
          containerName: {
            required: false,
            serializedName: 'containerName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ProtectedItemQueryObject;
