/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the KEKDetails class.
 * @constructor
 * The Key Encryption Key (KEK) is the encryption key for the Bitlocker
 * Encryption Key (BEK).
 *
 * @member {string} [keyUrl] Key refers to the Key Encryption Key (KEK). The
 * KEK is the Key to unlock the Secret.
 *
 * @member {string} [keyVaultId] Key Vault ID identifies where the KEK is
 * stored.
 *
 * @member {string} [keyBackupData] Key Backup Data refers to Key Encryption
 * Key (KEK) data.
 *
 */
class KEKDetails {
  constructor() {
  }

  /**
   * Defines the metadata of KEKDetails
   *
   * @returns {object} metadata of KEKDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'KEKDetails',
      type: {
        name: 'Composite',
        className: 'KEKDetails',
        modelProperties: {
          keyUrl: {
            required: false,
            serializedName: 'keyUrl',
            type: {
              name: 'String'
            }
          },
          keyVaultId: {
            required: false,
            serializedName: 'keyVaultId',
            type: {
              name: 'String'
            }
          },
          keyBackupData: {
            required: false,
            serializedName: 'keyBackupData',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = KEKDetails;
