/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * The Resource definition
 *
 * @member {string} [id] Resource Id
 *
 * @member {string} [name] Resource name
 *
 * @member {string} [type] Resource type
 *
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the TrackedResource class.
 * @constructor
 * Definition of Resource
 *
 * @member {string} location Resource location
 *
 * @member {object} [tags] Resource tags
 *
 */
export interface TrackedResource extends Resource {
  location: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the HybridConnection class.
 * @constructor
 * Description of HybridConnection Resource.
 *
 * @member {date} [createdAt] The time the HybridConnection was created.
 *
 * @member {date} [updatedAt] The time the namespace was updated.
 *
 * @member {number} [listenerCount] The number of listeners for this
 * HybridConnection. min : 1 and max:25 supported
 *
 * @member {boolean} [requiresClientAuthorization] true if client authorization
 * is needed for this HybridConnection; otherwise, false.
 *
 * @member {string} [userMetadata] usermetadata is a placeholder to store
 * user-defined string data for the HybridConnection endpoint.e.g. it can be
 * used to store  descriptive data, such as list of teams and their contact
 * information also user-defined configuration settings can be stored.
 *
 * @member {string} [path] The path of the HybridConnection.
 *
 */
export interface HybridConnection extends Resource {
  readonly createdAt?: Date;
  readonly updatedAt?: Date;
  readonly listenerCount?: number;
  requiresClientAuthorization?: boolean;
  userMetadata?: string;
  path?: string;
}

/**
 * @class
 * Initializes a new instance of the HybridConnectionListResult class.
 * @constructor
 * The response of the List HybridConnection operation.
 *
 * @member {array} [value] Result of the List HybridConnection .
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of HybridConnection operation
 *
 */
export interface HybridConnectionListResult {
  value?: HybridConnection[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the WcfRelay class.
 * @constructor
 * Description of WcfRelays Resource.
 *
 * @member {string} [relayType] WCFRelay Type. Possible values include:
 * 'NetTcp', 'Http'
 *
 * @member {date} [createdAt] The time the WCFRelay was created.
 *
 * @member {date} [updatedAt] The time the namespace was updated.
 *
 * @member {number} [listenerCount] The number of listeners for this relay. min
 * : 1 and max:25 supported
 *
 * @member {boolean} [requiresClientAuthorization] true if client authorization
 * is needed for this relay; otherwise, false.
 *
 * @member {boolean} [requiresTransportSecurity] true if transport security is
 * needed for this relay; otherwise, false.
 *
 * @member {boolean} [isDynamic] true if the relay is dynamic; otherwise,
 * false.
 *
 * @member {string} [userMetadata] usermetadata is a placeholder to store
 * user-defined string data for the HybridConnection endpoint.e.g. it can be
 * used to store  descriptive data, such as list of teams and their contact
 * information also user-defined configuration settings can be stored.
 *
 */
export interface WcfRelay extends Resource {
  relayType?: string;
  readonly createdAt?: Date;
  readonly updatedAt?: Date;
  readonly listenerCount?: number;
  requiresClientAuthorization?: boolean;
  requiresTransportSecurity?: boolean;
  readonly isDynamic?: boolean;
  userMetadata?: string;
}

/**
 * @class
 * Initializes a new instance of the WcfRelaysListResult class.
 * @constructor
 * The response of the List WcfRelays operation.
 *
 * @member {array} [value] Result of the List WcfRelays .
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of WcfRelays operation
 *
 */
export interface WcfRelaysListResult {
  value?: WcfRelay[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the Sku class.
 * @constructor
 * Sku of the Namespace.
 *
 */
export interface Sku {
}

/**
 * @class
 * Initializes a new instance of the RelayNamespace class.
 * @constructor
 * Description of a Namespace resource.
 *
 * @member {string} [provisioningState] Provisioning state of the namespace.
 *
 * @member {date} [createdAt] The time the namespace was created.
 *
 * @member {date} [updatedAt] The time the namespace was updated.
 *
 * @member {string} [serviceBusEndpoint] Endpoint you can use to perform
 * Service Bus operations.
 *
 * @member {string} [metricId] Identifier for Azure Insights metrics
 *
 */
export interface RelayNamespace extends TrackedResource {
  readonly provisioningState?: string;
  readonly createdAt?: Date;
  readonly updatedAt?: Date;
  readonly serviceBusEndpoint?: string;
  readonly metricId?: string;
}

/**
 * @class
 * Initializes a new instance of the RelayNamespaceListResult class.
 * @constructor
 * The response of the List Namespace operation.
 *
 * @member {array} [value] Result of the List Namespace operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of Namespaces
 *
 */
export interface RelayNamespaceListResult {
  value?: RelayNamespace[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SharedAccessAuthorizationRule class.
 * @constructor
 * Description of a Namespace AuthorizationRules.
 *
 * @member {array} rights The rights associated with the rule.
 *
 */
export interface SharedAccessAuthorizationRule extends Resource {
  rights: string[];
}

/**
 * @class
 * Initializes a new instance of the SharedAccessAuthorizationRuleListResult class.
 * @constructor
 * The response of the List Namespace operation.
 *
 * @member {array} [value] Result of the List AuthorizationRules operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of AuthorizationRules
 *
 */
export interface SharedAccessAuthorizationRuleListResult {
  value?: SharedAccessAuthorizationRule[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceListKeys class.
 * @constructor
 * Namespace/Relay Connection String
 *
 * @member {string} [primaryConnectionString] PrimaryConnectionString of the
 * created Namespace AuthorizationRule.
 *
 * @member {string} [secondaryConnectionString] SecondaryConnectionString of
 * the created Namespace AuthorizationRule
 *
 * @member {string} [primaryKey] A base64-encoded 256-bit primary key for
 * signing and validating the SAS token
 *
 * @member {string} [secondaryKey] A base64-encoded 256-bit secondary key for
 * signing and validating the SAS token
 *
 * @member {string} [keyName] A string that describes the authorization rule
 *
 */
export interface ResourceListKeys {
  primaryConnectionString?: string;
  secondaryConnectionString?: string;
  primaryKey?: string;
  secondaryKey?: string;
  keyName?: string;
}

/**
 * @class
 * Initializes a new instance of the RegenerateKeysParameters class.
 * @constructor
 * Parameters supplied to the Regenerate Authorization Rule operation.
 *
 * @member {string} [policyKey] Key that needs to be regenerated. Possible
 * values include: 'PrimaryKey', 'SecondaryKey'
 *
 */
export interface RegenerateKeysParameters {
  policyKey?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * Error reponse indicates Relay service is not able to process the incoming
 * request. The reason is provided in the error message.
 *
 * @member {string} [code] Error code.
 *
 * @member {string} [message] Error message indicating why the operation
 * failed.
 *
 */
export interface ErrorResponse {
  code?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the CheckNameAvailability class.
 * @constructor
 * Description of a Check Name availability request properties.
 *
 * @member {string} name The Name to check the namespce name availability and
 * The namespace name can contain only letters, numbers, and hyphens. The
 * namespace must start with a letter, and it must end with a letter or number.
 *
 */
export interface CheckNameAvailability {
  name: string;
}

/**
 * @class
 * Initializes a new instance of the CheckNameAvailabilityResult class.
 * @constructor
 * Description of a Check Name availability request properties.
 *
 * @member {boolean} [nameAvailable] Value indicating namespace is
 * availability, true if the namespace is available; otherwise, false.
 *
 * @member {string} [reason] The reason for unavailability of a namespace.
 * Possible values include: 'None', 'InvalidName', 'SubscriptionIsDisabled',
 * 'NameInUse', 'NameInLockdown', 'TooManyNamespaceInCurrentSubscription'
 *
 * @member {string} [message] The detailed info regarding the reason associated
 * with the namespace.
 *
 */
export interface CheckNameAvailabilityResult {
  nameAvailable?: boolean;
  reason?: string;
  readonly message?: string;
}

/**
 * @class
 * Initializes a new instance of the RelayNamespaceUpdateParameter class.
 * @constructor
 * Parameters supplied to the Patch Namespace operation.
 *
 * @member {object} [tags] Resource tags
 *
 */
export interface RelayNamespaceUpdateParameter {
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * The object that represents the operation.
 *
 * @member {string} [provider] Service provider: Microsoft.EventHub
 *
 * @member {string} [resource] Resource on which the operation is performed:
 * Invoice, etc.
 *
 * @member {string} [operation] Operation type: Read, write, delete, etc.
 *
 */
export interface OperationDisplay {
  readonly provider?: string;
  readonly resource?: string;
  readonly operation?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * A EventHub REST API operation
 *
 * @member {string} [name] Operation name: {provider}/{resource}/{operation}
 *
 * @member {object} [display] The object that represents the operation.
 *
 * @member {string} [display.provider] Service provider: Microsoft.EventHub
 *
 * @member {string} [display.resource] Resource on which the operation is
 * performed: Invoice, etc.
 *
 * @member {string} [display.operation] Operation type: Read, write, delete,
 * etc.
 *
 */
export interface Operation {
  readonly name?: string;
  display?: OperationDisplay;
}

/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list EventHub operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @member {array} [value] List of EventHub operations supported by the
 * Microsoft.EventHub resource provider.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 *
 */
export interface OperationListResult {
  readonly value?: Operation[];
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list EventHub operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @member {array} [value] List of EventHub operations supported by the
 * Microsoft.EventHub resource provider.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 *
 */
export interface OperationListResult {
  readonly value?: Operation[];
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RelayNamespaceListResult class.
 * @constructor
 * The response of the List Namespace operation.
 *
 * @member {array} [value] Result of the List Namespace operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of Namespaces
 *
 */
export interface RelayNamespaceListResult {
  value?: RelayNamespace[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SharedAccessAuthorizationRuleListResult class.
 * @constructor
 * The response of the List Namespace operation.
 *
 * @member {array} [value] Result of the List AuthorizationRules operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of AuthorizationRules
 *
 */
export interface SharedAccessAuthorizationRuleListResult {
  value?: SharedAccessAuthorizationRule[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the HybridConnectionListResult class.
 * @constructor
 * The response of the List HybridConnection operation.
 *
 * @member {array} [value] Result of the List HybridConnection .
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of HybridConnection operation
 *
 */
export interface HybridConnectionListResult {
  value?: HybridConnection[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the WcfRelaysListResult class.
 * @constructor
 * The response of the List WcfRelays operation.
 *
 * @member {array} [value] Result of the List WcfRelays .
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of WcfRelays operation
 *
 */
export interface WcfRelaysListResult {
  value?: WcfRelay[];
  nextLink?: string;
}


/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list EventHub operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 *
 */
export interface OperationListResult extends Array<Operation> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RelayNamespaceListResult class.
 * @constructor
 * The response of the List Namespace operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of Namespaces
 *
 */
export interface RelayNamespaceListResult extends Array<RelayNamespace> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SharedAccessAuthorizationRuleListResult class.
 * @constructor
 * The response of the List Namespace operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of AuthorizationRules
 *
 */
export interface SharedAccessAuthorizationRuleListResult extends Array<SharedAccessAuthorizationRule> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the HybridConnectionListResult class.
 * @constructor
 * The response of the List HybridConnection operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of HybridConnection operation
 *
 */
export interface HybridConnectionListResult extends Array<HybridConnection> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the WcfRelaysListResult class.
 * @constructor
 * The response of the List WcfRelays operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of WcfRelays operation
 *
 */
export interface WcfRelaysListResult extends Array<WcfRelay> {
  nextLink?: string;
}
