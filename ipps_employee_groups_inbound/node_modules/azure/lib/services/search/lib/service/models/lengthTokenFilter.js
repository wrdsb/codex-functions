/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the LengthTokenFilter class.
 * @constructor
 * Removes words that are too long or too short. This token filter is
 * implemented using Apache Lucene.
 *
 * @member {number} [min] The minimum length in characters. Default is 0.
 * Maximum is 300. Must be less than the value of max. Default value: 0 .
 *
 * @member {number} [max] The maximum length in characters. Default and maximum
 * is 300. Default value: 300 .
 *
 */
class LengthTokenFilter extends models['TokenFilter'] {
  constructor() {
    super();
  }

  /**
   * Defines the metadata of LengthTokenFilter
   *
   * @returns {object} metadata of LengthTokenFilter
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: '#Microsoft.Azure.Search.LengthTokenFilter',
      type: {
        name: 'Composite',
        className: 'LengthTokenFilter',
        modelProperties: {
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          odatatype: {
            required: true,
            serializedName: '@odata\\.type',
            type: {
              name: 'String'
            }
          },
          min: {
            required: false,
            serializedName: 'min',
            defaultValue: 0,
            constraints: {
              InclusiveMaximum: 300
            },
            type: {
              name: 'Number'
            }
          },
          max: {
            required: false,
            serializedName: 'max',
            defaultValue: 300,
            constraints: {
              InclusiveMaximum: 300
            },
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = LengthTokenFilter;
