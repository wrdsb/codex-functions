/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * ItemLevelRecoveryConnections
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ItemLevelRecoveryConnections {


    /**
     * Revokes an iSCSI connection which can be used to download a script.
     * Executing this script opens a file explorer displaying all recoverable files
     * and folders. This is an asynchronous operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup items.
     * The value allowed is Azure.
     *
     * @param {string} containerName The container name associated with the backup
     * items.
     *
     * @param {string} protectedItemName The name of the backup items whose files
     * or folders will be restored.
     *
     * @param {string} recoveryPointId The string that identifies the recovery
     * point. The iSCSI connection will be revoked for this protected data.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    revokeWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Revokes an iSCSI connection which can be used to download a script.
     * Executing this script opens a file explorer displaying all recoverable files
     * and folders. This is an asynchronous operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup items.
     * The value allowed is Azure.
     *
     * @param {string} containerName The container name associated with the backup
     * items.
     *
     * @param {string} protectedItemName The name of the backup items whose files
     * or folders will be restored.
     *
     * @param {string} recoveryPointId The string that identifies the recovery
     * point. The iSCSI connection will be revoked for this protected data.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    revoke(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    revoke(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, callback: ServiceCallback<void>): void;
    revoke(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Provisions a script which invokes an iSCSI connection to the backup data.
     * Executing this script opens File Explorer which displays the recoverable
     * files and folders. This is an asynchronous operation. To get the
     * provisioning status, call GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup items.
     *
     * @param {string} containerName The container name associated with the backup
     * items.
     *
     * @param {string} protectedItemName The name of the backup item whose files or
     * folders are to be restored.
     *
     * @param {string} recoveryPointId The recovery point ID for backup data. The
     * iSCSI connection will be provisioned for this backup data.
     *
     * @param {object} resourceILRRequest The resource Item Level Recovery (ILR)
     * request.
     *
     * @param {object} [resourceILRRequest.properties]
     *
     * @param {string} resourceILRRequest.properties.objectType Polymorphic
     * Discriminator
     *
     * @param {string} [resourceILRRequest.id] Resource ID represents the complete
     * path to the resource.
     *
     * @param {string} [resourceILRRequest.name] Resource name associated with the
     * resource.
     *
     * @param {string} [resourceILRRequest.type] Resource type represents the
     * complete path of the form Namespace/ResourceType/ResourceType/...
     *
     * @param {string} [resourceILRRequest.location] Resource location.
     *
     * @param {object} [resourceILRRequest.tags] Resource tags.
     *
     * @param {string} [resourceILRRequest.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    provisionWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, resourceILRRequest: models.ILRRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Provisions a script which invokes an iSCSI connection to the backup data.
     * Executing this script opens File Explorer which displays the recoverable
     * files and folders. This is an asynchronous operation. To get the
     * provisioning status, call GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup items.
     *
     * @param {string} containerName The container name associated with the backup
     * items.
     *
     * @param {string} protectedItemName The name of the backup item whose files or
     * folders are to be restored.
     *
     * @param {string} recoveryPointId The recovery point ID for backup data. The
     * iSCSI connection will be provisioned for this backup data.
     *
     * @param {object} resourceILRRequest The resource Item Level Recovery (ILR)
     * request.
     *
     * @param {object} [resourceILRRequest.properties]
     *
     * @param {string} resourceILRRequest.properties.objectType Polymorphic
     * Discriminator
     *
     * @param {string} [resourceILRRequest.id] Resource ID represents the complete
     * path to the resource.
     *
     * @param {string} [resourceILRRequest.name] Resource name associated with the
     * resource.
     *
     * @param {string} [resourceILRRequest.type] Resource type represents the
     * complete path of the form Namespace/ResourceType/ResourceType/...
     *
     * @param {string} [resourceILRRequest.location] Resource location.
     *
     * @param {object} [resourceILRRequest.tags] Resource tags.
     *
     * @param {string} [resourceILRRequest.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    provision(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, resourceILRRequest: models.ILRRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    provision(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, resourceILRRequest: models.ILRRequestResource, callback: ServiceCallback<void>): void;
    provision(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, resourceILRRequest: models.ILRRequestResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Restores
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface Restores {


    /**
     * Restores the specified backup data. This is an asynchronous operation. To
     * know the status of this API call, use GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup items.
     *
     * @param {string} containerName The container name associated with the backup
     * items.
     *
     * @param {string} protectedItemName The backup item to be restored.
     *
     * @param {string} recoveryPointId The recovery point ID for the backup data to
     * be restored.
     *
     * @param {object} resourceRestoreRequest The resource restore request.
     *
     * @param {object} [resourceRestoreRequest.properties]
     *
     * @param {string} resourceRestoreRequest.properties.objectType Polymorphic
     * Discriminator
     *
     * @param {string} [resourceRestoreRequest.id] Resource ID represents the
     * complete path to the resource.
     *
     * @param {string} [resourceRestoreRequest.name] Resource name associated with
     * the resource.
     *
     * @param {string} [resourceRestoreRequest.type] Resource type represents the
     * complete path of the form Namespace/ResourceType/ResourceType/...
     *
     * @param {string} [resourceRestoreRequest.location] Resource location.
     *
     * @param {object} [resourceRestoreRequest.tags] Resource tags.
     *
     * @param {string} [resourceRestoreRequest.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    triggerWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, resourceRestoreRequest: models.RestoreRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Restores the specified backup data. This is an asynchronous operation. To
     * know the status of this API call, use GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup items.
     *
     * @param {string} containerName The container name associated with the backup
     * items.
     *
     * @param {string} protectedItemName The backup item to be restored.
     *
     * @param {string} recoveryPointId The recovery point ID for the backup data to
     * be restored.
     *
     * @param {object} resourceRestoreRequest The resource restore request.
     *
     * @param {object} [resourceRestoreRequest.properties]
     *
     * @param {string} resourceRestoreRequest.properties.objectType Polymorphic
     * Discriminator
     *
     * @param {string} [resourceRestoreRequest.id] Resource ID represents the
     * complete path to the resource.
     *
     * @param {string} [resourceRestoreRequest.name] Resource name associated with
     * the resource.
     *
     * @param {string} [resourceRestoreRequest.type] Resource type represents the
     * complete path of the form Namespace/ResourceType/ResourceType/...
     *
     * @param {string} [resourceRestoreRequest.location] Resource location.
     *
     * @param {object} [resourceRestoreRequest.tags] Resource tags.
     *
     * @param {string} [resourceRestoreRequest.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, resourceRestoreRequest: models.RestoreRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, resourceRestoreRequest: models.RestoreRequestResource, callback: ServiceCallback<void>): void;
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, resourceRestoreRequest: models.RestoreRequestResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * ProtectionPolicyOperationStatuses
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionPolicyOperationStatuses {


    /**
     * Provides the status of the asynchronous operations like backup or restore.
     * The status can be: in progress, completed, or failed. You can refer to the
     * Operation Status enumeration for the possible states of an operation. Some
     * operations create jobs. This method returns the list of jobs associated with
     * the operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} policyName The backup policy name used in this GET
     * operation.
     *
     * @param {string} operationId The ID associated with this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationStatus>>;

    /**
     * Provides the status of the asynchronous operations like backup or restore.
     * The status can be: in progress, completed, or failed. You can refer to the
     * Operation Status enumeration for the possible states of an operation. Some
     * operations create jobs. This method returns the list of jobs associated with
     * the operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} policyName The backup policy name used in this GET
     * operation.
     *
     * @param {string} operationId The ID associated with this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationStatus>;
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, callback: ServiceCallback<models.OperationStatus>): void;
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationStatus>): void;
}

/**
 * @class
 * ProtectionPolicyOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionPolicyOperationResults {


    /**
     * Provides the result of an operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} policyName The backup policy name used in this GET
     * operation.
     *
     * @param {string} operationId The ID associated with this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionPolicyResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionPolicyResource>>;

    /**
     * Provides the result of an operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} policyName The backup policy name used in this GET
     * operation.
     *
     * @param {string} operationId The ID associated with this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionPolicyResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionPolicyResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionPolicyResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionPolicyResource>;
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, callback: ServiceCallback<models.ProtectionPolicyResource>): void;
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionPolicyResource>): void;
}

/**
 * @class
 * ProtectionPolicies
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionPolicies {


    /**
     * Gets the details of the backup policy associated with the Recovery Services
     * vault. This is an asynchronous operation. Use the GetPolicyOperationResult
     * API to Get the operation status.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} policyName The backup policy name used in this GET
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionPolicyResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionPolicyResource>>;

    /**
     * Gets the details of the backup policy associated with the Recovery Services
     * vault. This is an asynchronous operation. Use the GetPolicyOperationResult
     * API to Get the operation status.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} policyName The backup policy name used in this GET
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionPolicyResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionPolicyResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionPolicyResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionPolicyResource>;
    get(vaultName: string, resourceGroupName: string, policyName: string, callback: ServiceCallback<models.ProtectionPolicyResource>): void;
    get(vaultName: string, resourceGroupName: string, policyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionPolicyResource>): void;


    /**
     * Creates or modifies a backup policy. This is an asynchronous operation. Use
     * the GetPolicyOperationResult API to Get the operation status.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} policyName The backup policy to be created.
     *
     * @param {object} resourceProtectionPolicy The resource backup policy.
     *
     * @param {object} [resourceProtectionPolicy.properties]
     *
     * @param {number} [resourceProtectionPolicy.properties.protectedItemsCount]
     * The number of items associated with this policy.
     *
     * @param {string} resourceProtectionPolicy.properties.backupManagementType
     * Polymorphic Discriminator
     *
     * @param {string} [resourceProtectionPolicy.id] Resource ID represents the
     * complete path to the resource.
     *
     * @param {string} [resourceProtectionPolicy.name] Resource name associated
     * with the resource.
     *
     * @param {string} [resourceProtectionPolicy.type] Resource type represents the
     * complete path of the form Namespace/ResourceType/ResourceType/...
     *
     * @param {string} [resourceProtectionPolicy.location] Resource location.
     *
     * @param {object} [resourceProtectionPolicy.tags] Resource tags.
     *
     * @param {string} [resourceProtectionPolicy.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionPolicyResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(vaultName: string, resourceGroupName: string, policyName: string, resourceProtectionPolicy: models.ProtectionPolicyResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionPolicyResource>>;

    /**
     * Creates or modifies a backup policy. This is an asynchronous operation. Use
     * the GetPolicyOperationResult API to Get the operation status.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} policyName The backup policy to be created.
     *
     * @param {object} resourceProtectionPolicy The resource backup policy.
     *
     * @param {object} [resourceProtectionPolicy.properties]
     *
     * @param {number} [resourceProtectionPolicy.properties.protectedItemsCount]
     * The number of items associated with this policy.
     *
     * @param {string} resourceProtectionPolicy.properties.backupManagementType
     * Polymorphic Discriminator
     *
     * @param {string} [resourceProtectionPolicy.id] Resource ID represents the
     * complete path to the resource.
     *
     * @param {string} [resourceProtectionPolicy.name] Resource name associated
     * with the resource.
     *
     * @param {string} [resourceProtectionPolicy.type] Resource type represents the
     * complete path of the form Namespace/ResourceType/ResourceType/...
     *
     * @param {string} [resourceProtectionPolicy.location] Resource location.
     *
     * @param {object} [resourceProtectionPolicy.tags] Resource tags.
     *
     * @param {string} [resourceProtectionPolicy.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionPolicyResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionPolicyResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionPolicyResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(vaultName: string, resourceGroupName: string, policyName: string, resourceProtectionPolicy: models.ProtectionPolicyResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionPolicyResource>;
    createOrUpdate(vaultName: string, resourceGroupName: string, policyName: string, resourceProtectionPolicy: models.ProtectionPolicyResource, callback: ServiceCallback<models.ProtectionPolicyResource>): void;
    createOrUpdate(vaultName: string, resourceGroupName: string, policyName: string, resourceProtectionPolicy: models.ProtectionPolicyResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionPolicyResource>): void;


    /**
     * Deletes the specified backup policy from your Recovery Services vault. This
     * is an asynchronous operation. Use the GetPolicyOperationResult API to Get
     * the operation status.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} policyName The name of the backup policy to be deleted.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(vaultName: string, resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the specified backup policy from your Recovery Services vault. This
     * is an asynchronous operation. Use the GetPolicyOperationResult API to Get
     * the operation status.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} policyName The name of the backup policy to be deleted.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(vaultName: string, resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(vaultName: string, resourceGroupName: string, policyName: string, callback: ServiceCallback<void>): void;
    deleteMethod(vaultName: string, resourceGroupName: string, policyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists the backup policies associated with the Recovery Services vault. The
     * API provides parameters to Get scoped results.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The following equation can be used to
     * filter the list of backup policies. backupManagementType eq {AzureIaasVM,
     * MAB, DPM, AzureBackupServer, AzureSql}.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionPolicyResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionPolicyResourceList>>;

    /**
     * Lists the backup policies associated with the Recovery Services vault. The
     * API provides parameters to Get scoped results.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The following equation can be used to
     * filter the list of backup policies. backupManagementType eq {AzureIaasVM,
     * MAB, DPM, AzureBackupServer, AzureSql}.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionPolicyResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionPolicyResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionPolicyResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionPolicyResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.ProtectionPolicyResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionPolicyResourceList>): void;


    /**
     * Lists the backup policies associated with the Recovery Services vault. The
     * API provides parameters to Get scoped results.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionPolicyResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionPolicyResourceList>>;

    /**
     * Lists the backup policies associated with the Recovery Services vault. The
     * API provides parameters to Get scoped results.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionPolicyResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionPolicyResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionPolicyResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionPolicyResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProtectionPolicyResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionPolicyResourceList>): void;
}

/**
 * @class
 * ProtectionContainerOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionContainerOperationResults {


    /**
     * Gets the result of any operation on the container.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the container.
     *
     * @param {string} containerName The container name used for this GET
     * operation.
     *
     * @param {string} operationId The operation ID used for this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerResource>>;

    /**
     * Gets the result of any operation on the container.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the container.
     *
     * @param {string} containerName The container name used for this GET
     * operation.
     *
     * @param {string} operationId The operation ID used for this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerResource>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, operationId: string, callback: ServiceCallback<models.ProtectionContainerResource>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerResource>): void;
}

/**
 * @class
 * ProtectionContainerRefreshOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionContainerRefreshOperationResults {


    /**
     * Provides the result of the refresh operation triggered by the BeginRefresh
     * operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the container.
     *
     * @param {string} operationId The operation ID used for this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Provides the result of the refresh operation triggered by the BeginRefresh
     * operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the container.
     *
     * @param {string} operationId The operation ID used for this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, operationId: string, callback: ServiceCallback<void>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * ProtectionContainers
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionContainers {


    /**
     * Gets details of the specific container registered to your Recovery Services
     * vault.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the container.
     *
     * @param {string} containerName The container name used for this GET
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerResource>>;

    /**
     * Gets details of the specific container registered to your Recovery Services
     * vault.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the container.
     *
     * @param {string} containerName The container name used for this GET
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerResource>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, callback: ServiceCallback<models.ProtectionContainerResource>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerResource>): void;


    /**
     * Lists the containers registered to the Recovery Services vault.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The following equation is used to sort or
     * filter the containers registered to the vault. providerType eq {AzureIaasVM,
     * MAB, DPM, AzureBackupServer, AzureSql} and status eq {Unknown,
     * NotRegistered, Registered, Registering} and friendlyName eq {containername}
     * and backupManagementType eq {AzureIaasVM, MAB, DPM, AzureBackupServer,
     * AzureSql}.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerResourceList>>;

    /**
     * Lists the containers registered to the Recovery Services vault.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The following equation is used to sort or
     * filter the containers registered to the vault. providerType eq {AzureIaasVM,
     * MAB, DPM, AzureBackupServer, AzureSql} and status eq {Unknown,
     * NotRegistered, Registered, Registering} and friendlyName eq {containername}
     * and backupManagementType eq {AzureIaasVM, MAB, DPM, AzureBackupServer,
     * AzureSql}.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.ProtectionContainerResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerResourceList>): void;


    /**
     * Discovers the containers in the subscription that can be protected in a
     * Recovery Services vault. This is an asynchronous operation. To learn the
     * status of the operation, use the GetRefreshOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the container.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    refreshWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Discovers the containers in the subscription that can be protected in a
     * Recovery Services vault. This is an asynchronous operation. To learn the
     * status of the operation, use the GetRefreshOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the container.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    refresh(vaultName: string, resourceGroupName: string, fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    refresh(vaultName: string, resourceGroupName: string, fabricName: string, callback: ServiceCallback<void>): void;
    refresh(vaultName: string, resourceGroupName: string, fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Unregisters the given container from your Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} identityName Name of the protection container to unregister.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    unregisterWithHttpOperationResponse(resourceGroupName: string, vaultName: string, identityName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Unregisters the given container from your Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} identityName Name of the protection container to unregister.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    unregister(resourceGroupName: string, vaultName: string, identityName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    unregister(resourceGroupName: string, vaultName: string, identityName: string, callback: ServiceCallback<void>): void;
    unregister(resourceGroupName: string, vaultName: string, identityName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists the containers registered to the Recovery Services vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerResourceList>>;

    /**
     * Lists the containers registered to the Recovery Services vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProtectionContainerResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerResourceList>): void;
}

/**
 * @class
 * RecoveryPoints
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface RecoveryPoints {


    /**
     * Provides the backup data for the RecoveryPointID. This is an asynchronous
     * operation. To learn the status of the operation, call the
     * GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with backup item.
     *
     * @param {string} containerName The container name associated with backup
     * item.
     *
     * @param {string} protectedItemName The name of the backup item used in this
     * GET operation.
     *
     * @param {string} recoveryPointId The RecoveryPointID associated with this GET
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPointResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPointResource>>;

    /**
     * Provides the backup data for the RecoveryPointID. This is an asynchronous
     * operation. To learn the status of the operation, call the
     * GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with backup item.
     *
     * @param {string} containerName The container name associated with backup
     * item.
     *
     * @param {string} protectedItemName The name of the backup item used in this
     * GET operation.
     *
     * @param {string} recoveryPointId The RecoveryPointID associated with this GET
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPointResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPointResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPointResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPointResource>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, callback: ServiceCallback<models.RecoveryPointResource>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPointResource>): void;


    /**
     * Lists the recovery points, or backup copies, for the specified backup item.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The name of backup item used in this GET
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] startDate eq {yyyy-mm-dd hh:mm:ss PM} and
     * endDate { yyyy-mm-dd hh:mm:ss PM}.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPointResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPointResourceList>>;

    /**
     * Lists the recovery points, or backup copies, for the specified backup item.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The name of backup item used in this GET
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] startDate eq {yyyy-mm-dd hh:mm:ss PM} and
     * endDate { yyyy-mm-dd hh:mm:ss PM}.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPointResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPointResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPointResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPointResourceList>;
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, callback: ServiceCallback<models.RecoveryPointResourceList>): void;
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPointResourceList>): void;


    /**
     * Lists the recovery points, or backup copies, for the specified backup item.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPointResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPointResourceList>>;

    /**
     * Lists the recovery points, or backup copies, for the specified backup item.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPointResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPointResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPointResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPointResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.RecoveryPointResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPointResourceList>): void;
}

/**
 * @class
 * Backups
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface Backups {


    /**
     * Triggers the backup job for the specified backup item. This is an
     * asynchronous operation. To know the status of the operation, call
     * GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The name of backup item used in this POST
     * operation.
     *
     * @param {object} resourceBackupRequest The resource backup request.
     *
     * @param {object} [resourceBackupRequest.properties]
     *
     * @param {string} resourceBackupRequest.properties.objectType Polymorphic
     * Discriminator
     *
     * @param {string} [resourceBackupRequest.id] Resource ID represents the
     * complete path to the resource.
     *
     * @param {string} [resourceBackupRequest.name] Resource name associated with
     * the resource.
     *
     * @param {string} [resourceBackupRequest.type] Resource type represents the
     * complete path of the form Namespace/ResourceType/ResourceType/...
     *
     * @param {string} [resourceBackupRequest.location] Resource location.
     *
     * @param {object} [resourceBackupRequest.tags] Resource tags.
     *
     * @param {string} [resourceBackupRequest.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    triggerWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, resourceBackupRequest: models.BackupRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Triggers the backup job for the specified backup item. This is an
     * asynchronous operation. To know the status of the operation, call
     * GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The name of backup item used in this POST
     * operation.
     *
     * @param {object} resourceBackupRequest The resource backup request.
     *
     * @param {object} [resourceBackupRequest.properties]
     *
     * @param {string} resourceBackupRequest.properties.objectType Polymorphic
     * Discriminator
     *
     * @param {string} [resourceBackupRequest.id] Resource ID represents the
     * complete path to the resource.
     *
     * @param {string} [resourceBackupRequest.name] Resource name associated with
     * the resource.
     *
     * @param {string} [resourceBackupRequest.type] Resource type represents the
     * complete path of the form Namespace/ResourceType/ResourceType/...
     *
     * @param {string} [resourceBackupRequest.location] Resource location.
     *
     * @param {object} [resourceBackupRequest.tags] Resource tags.
     *
     * @param {string} [resourceBackupRequest.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, resourceBackupRequest: models.BackupRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, resourceBackupRequest: models.BackupRequestResource, callback: ServiceCallback<void>): void;
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, resourceBackupRequest: models.BackupRequestResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * ProtectedItemOperationStatuses
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectedItemOperationStatuses {


    /**
     * Gets the status of an operation such as triggering a backup or restore. The
     * status can be: In progress, Completed, or Failed. You can refer to the
     * OperationStatus enum for all the possible states of the operation. Some
     * operations create jobs. This method returns the list of jobs associated with
     * the operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The name of backup item used in this GET
     * operation.
     *
     * @param {string} operationId The OperationID used in this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationStatus>>;

    /**
     * Gets the status of an operation such as triggering a backup or restore. The
     * status can be: In progress, Completed, or Failed. You can refer to the
     * OperationStatus enum for all the possible states of the operation. Some
     * operations create jobs. This method returns the list of jobs associated with
     * the operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The name of backup item used in this GET
     * operation.
     *
     * @param {string} operationId The OperationID used in this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationStatus>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, callback: ServiceCallback<models.OperationStatus>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationStatus>): void;
}

/**
 * @class
 * ProtectedItemOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectedItemOperationResults {


    /**
     * Gets the result of any operation on the backup item.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The name of backup item used in this GET
     * operation.
     *
     * @param {string} operationId The OperationID used in this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectedItemResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectedItemResource>>;

    /**
     * Gets the result of any operation on the backup item.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The name of backup item used in this GET
     * operation.
     *
     * @param {string} operationId The OperationID used in this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectedItemResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectedItemResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectedItemResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectedItemResource>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, callback: ServiceCallback<models.ProtectedItemResource>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectedItemResource>): void;
}

/**
 * @class
 * ProtectedItems
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectedItems {


    /**
     * Provides a pageable list of all items in a subscription, that can be
     * protected.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter]  itemType eq { VM , FileFolder , AzureSqlDb
     * , SQLDB , Exchange , Sharepoint , DPMUnknown } and providerType eq {
     * AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql } and policyName eq
     * {policyname} and containerName eq {containername} and backupManagementType
     * eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql }.
     *
     * @param {string} [options.skipToken]  The Skip Token filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectedItemResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectedItemResourceList>>;

    /**
     * Provides a pageable list of all items in a subscription, that can be
     * protected.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter]  itemType eq { VM , FileFolder , AzureSqlDb
     * , SQLDB , Exchange , Sharepoint , DPMUnknown } and providerType eq {
     * AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql } and policyName eq
     * {policyname} and containerName eq {containername} and backupManagementType
     * eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql }.
     *
     * @param {string} [options.skipToken]  The Skip Token filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectedItemResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectedItemResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectedItemResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectedItemResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.ProtectedItemResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectedItemResourceList>): void;


    /**
     * Provides the details of the backup item. This is an asynchronous operation.
     * To know the status of the operation, call the GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The backup item name used in this GET
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] expand eq {extendedinfo}. This filter
     * enables you to choose (or filter) specific items in the list of backup
     * items.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectedItemResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectedItemResource>>;

    /**
     * Provides the details of the backup item. This is an asynchronous operation.
     * To know the status of the operation, call the GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The backup item name used in this GET
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] expand eq {extendedinfo}. This filter
     * enables you to choose (or filter) specific items in the list of backup
     * items.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectedItemResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectedItemResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectedItemResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectedItemResource>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, callback: ServiceCallback<models.ProtectedItemResource>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectedItemResource>): void;


    /**
     * This operation enables an item to be backed up, or modifies the existing
     * backup policy information for an item that has been backed up. This is an
     * asynchronous operation. To learn the status of the operation, call the
     * GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The name of the backup item.
     *
     * @param {object} resourceProtectedItem The resource backup item.
     *
     * @param {object} [resourceProtectedItem.properties]
     *
     * @param {string} [resourceProtectedItem.properties.backupManagementType] The
     * backup managemenent type associated with the backup item. Possible values
     * include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',
     * 'AzureSql'
     *
     * @param {string} [resourceProtectedItem.properties.workloadType] The workload
     * type for this item. Possible values include: 'Invalid', 'VM', 'FileFolder',
     * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'DPMUnknown'
     *
     * @param {string} [resourceProtectedItem.properties.sourceResourceId] The ID
     * of the resource to be backed up.
     *
     * @param {string} [resourceProtectedItem.properties.policyId] The ID of the
     * backup policy associated with this backup item.
     *
     * @param {date} [resourceProtectedItem.properties.lastRecoveryPoint] The
     * timestamp when the most recent backup copy was created for this backup item.
     *
     * @param {string} resourceProtectedItem.properties.protectedItemType
     * Polymorphic Discriminator
     *
     * @param {string} [resourceProtectedItem.id] Resource ID represents the
     * complete path to the resource.
     *
     * @param {string} [resourceProtectedItem.name] Resource name associated with
     * the resource.
     *
     * @param {string} [resourceProtectedItem.type] Resource type represents the
     * complete path of the form Namespace/ResourceType/ResourceType/...
     *
     * @param {string} [resourceProtectedItem.location] Resource location.
     *
     * @param {object} [resourceProtectedItem.tags] Resource tags.
     *
     * @param {string} [resourceProtectedItem.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, resourceProtectedItem: models.ProtectedItemResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * This operation enables an item to be backed up, or modifies the existing
     * backup policy information for an item that has been backed up. This is an
     * asynchronous operation. To learn the status of the operation, call the
     * GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The name of the backup item.
     *
     * @param {object} resourceProtectedItem The resource backup item.
     *
     * @param {object} [resourceProtectedItem.properties]
     *
     * @param {string} [resourceProtectedItem.properties.backupManagementType] The
     * backup managemenent type associated with the backup item. Possible values
     * include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',
     * 'AzureSql'
     *
     * @param {string} [resourceProtectedItem.properties.workloadType] The workload
     * type for this item. Possible values include: 'Invalid', 'VM', 'FileFolder',
     * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'DPMUnknown'
     *
     * @param {string} [resourceProtectedItem.properties.sourceResourceId] The ID
     * of the resource to be backed up.
     *
     * @param {string} [resourceProtectedItem.properties.policyId] The ID of the
     * backup policy associated with this backup item.
     *
     * @param {date} [resourceProtectedItem.properties.lastRecoveryPoint] The
     * timestamp when the most recent backup copy was created for this backup item.
     *
     * @param {string} resourceProtectedItem.properties.protectedItemType
     * Polymorphic Discriminator
     *
     * @param {string} [resourceProtectedItem.id] Resource ID represents the
     * complete path to the resource.
     *
     * @param {string} [resourceProtectedItem.name] Resource name associated with
     * the resource.
     *
     * @param {string} [resourceProtectedItem.type] Resource type represents the
     * complete path of the form Namespace/ResourceType/ResourceType/...
     *
     * @param {string} [resourceProtectedItem.location] Resource location.
     *
     * @param {object} [resourceProtectedItem.tags] Resource tags.
     *
     * @param {string} [resourceProtectedItem.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, resourceProtectedItem: models.ProtectedItemResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, resourceProtectedItem: models.ProtectedItemResource, callback: ServiceCallback<void>): void;
    createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, resourceProtectedItem: models.ProtectedItemResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Used to disable the backup job for an item within a container. This is an
     * asynchronous operation. To learn the status of the request, call the
     * GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName  The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The backup item to be deleted.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Used to disable the backup job for an item within a container. This is an
     * asynchronous operation. To learn the status of the request, call the
     * GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} fabricName  The fabric name associated with the backup item.
     *
     * @param {string} containerName The container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName The backup item to be deleted.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, callback: ServiceCallback<void>): void;
    deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Provides a pageable list of all items in a subscription, that can be
     * protected.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectedItemResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectedItemResourceList>>;

    /**
     * Provides a pageable list of all items in a subscription, that can be
     * protected.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectedItemResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectedItemResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectedItemResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectedItemResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProtectedItemResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectedItemResourceList>): void;
}

/**
 * @class
 * ProtectableItems
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectableItems {


    /**
     * Based on the query filter and the pagination parameters, this operation
     * provides a pageable list of objects within the subscription that can be
     * protected.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] Using the following query filters, you can
     * sort a specific backup item based on: type of backup item, status, name of
     * the item, and more.  providerType eq { AzureIaasVM, MAB, DPM,
     * AzureBackupServer, AzureSql } and status eq { NotProtected , Protecting ,
     * Protected } and friendlyName {name} and skipToken eq {string which provides
     * the next set of list} and topToken eq {int} and backupManagementType eq {
     * AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql }.
     *
     * @param {string} [options.skipToken] The Skip Token filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WorkloadProtectableItemResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WorkloadProtectableItemResourceList>>;

    /**
     * Based on the query filter and the pagination parameters, this operation
     * provides a pageable list of objects within the subscription that can be
     * protected.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] Using the following query filters, you can
     * sort a specific backup item based on: type of backup item, status, name of
     * the item, and more.  providerType eq { AzureIaasVM, MAB, DPM,
     * AzureBackupServer, AzureSql } and status eq { NotProtected , Protecting ,
     * Protected } and friendlyName {name} and skipToken eq {string which provides
     * the next set of list} and topToken eq {int} and backupManagementType eq {
     * AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql }.
     *
     * @param {string} [options.skipToken] The Skip Token filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WorkloadProtectableItemResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WorkloadProtectableItemResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WorkloadProtectableItemResourceList} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.WorkloadProtectableItemResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.WorkloadProtectableItemResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WorkloadProtectableItemResourceList>): void;


    /**
     * Based on the query filter and the pagination parameters, this operation
     * provides a pageable list of objects within the subscription that can be
     * protected.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WorkloadProtectableItemResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WorkloadProtectableItemResourceList>>;

    /**
     * Based on the query filter and the pagination parameters, this operation
     * provides a pageable list of objects within the subscription that can be
     * protected.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WorkloadProtectableItemResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WorkloadProtectableItemResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WorkloadProtectableItemResourceList} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WorkloadProtectableItemResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.WorkloadProtectableItemResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WorkloadProtectableItemResourceList>): void;
}

/**
 * @class
 * ExportJobsOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ExportJobsOperationResults {


    /**
     * Gets the result of the operation triggered by the ExportJob API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} operationId The ID associated with the export job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationResultInfoBaseResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationResultInfoBaseResource>>;

    /**
     * Gets the result of the operation triggered by the ExportJob API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} operationId The ID associated with the export job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationResultInfoBaseResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationResultInfoBaseResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationResultInfoBaseResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationResultInfoBaseResource>;
    get(vaultName: string, resourceGroupName: string, operationId: string, callback: ServiceCallback<models.OperationResultInfoBaseResource>): void;
    get(vaultName: string, resourceGroupName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationResultInfoBaseResource>): void;
}

/**
 * @class
 * JobOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface JobOperationResults {


    /**
     * Gets the result of the operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} jobName Job name associated with this GET operation.
     *
     * @param {string} operationId OperationID associated with this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, jobName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Gets the result of the operation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} jobName Job name associated with this GET operation.
     *
     * @param {string} operationId OperationID associated with this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, jobName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    get(vaultName: string, resourceGroupName: string, jobName: string, operationId: string, callback: ServiceCallback<void>): void;
    get(vaultName: string, resourceGroupName: string, jobName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Jobs
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface Jobs {


    /**
     * Exports all jobs for a given Shared Access Signatures (SAS) URL. The SAS URL
     * expires within 15 minutes of its creation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The OData filter options. status eq {
     * InProgress , Completed , Failed , CompletedWithWarnings , Cancelled ,
     * Cancelling } and backupManagementType eq {AzureIaasVM, MAB, DPM,
     * AzureBackupServer, AzureSql } and operation eq { ConfigureBackup , Backup ,
     * Restore , DisableBackup , DeleteBackupData } and jobId eq {guid} and
     * startTime eq { yyyy-mm-dd hh:mm:ss PM } and endTime eq { yyyy-mm-dd hh:mm:ss
     * PM }.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    exportMethodWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Exports all jobs for a given Shared Access Signatures (SAS) URL. The SAS URL
     * expires within 15 minutes of its creation.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The OData filter options. status eq {
     * InProgress , Completed , Failed , CompletedWithWarnings , Cancelled ,
     * Cancelling } and backupManagementType eq {AzureIaasVM, MAB, DPM,
     * AzureBackupServer, AzureSql } and operation eq { ConfigureBackup , Backup ,
     * Restore , DisableBackup , DeleteBackupData } and jobId eq {guid} and
     * startTime eq { yyyy-mm-dd hh:mm:ss PM } and endTime eq { yyyy-mm-dd hh:mm:ss
     * PM }.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    exportMethod(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    exportMethod(vaultName: string, resourceGroupName: string, callback: ServiceCallback<void>): void;
    exportMethod(vaultName: string, resourceGroupName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Provides a pageable list of jobs.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The following equation can be used to
     * filter the list of jobs based on status, type, start date, and end date.
     * status eq { InProgress , Completed , Failed , CompletedWithWarnings ,
     * Cancelled , Cancelling } and backupManagementType eq {AzureIaasVM, MAB, DPM,
     * AzureBackupServer, AzureSql } and operation eq { ConfigureBackup , Backup ,
     * Restore , DisableBackup , DeleteBackupData } and jobId eq {guid} and
     * startTime eq { yyyy-mm-dd hh:mm:ss PM } and endTime eq { yyyy-mm-dd hh:mm:ss
     * PM }.
     *
     * @param {string} [options.skipToken] The Skip Token filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResourceList>>;

    /**
     * Provides a pageable list of jobs.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The following equation can be used to
     * filter the list of jobs based on status, type, start date, and end date.
     * status eq { InProgress , Completed , Failed , CompletedWithWarnings ,
     * Cancelled , Cancelling } and backupManagementType eq {AzureIaasVM, MAB, DPM,
     * AzureBackupServer, AzureSql } and operation eq { ConfigureBackup , Backup ,
     * Restore , DisableBackup , DeleteBackupData } and jobId eq {guid} and
     * startTime eq { yyyy-mm-dd hh:mm:ss PM } and endTime eq { yyyy-mm-dd hh:mm:ss
     * PM }.
     *
     * @param {string} [options.skipToken] The Skip Token filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.JobResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResourceList>): void;


    /**
     * Provides a pageable list of jobs.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResourceList>>;

    /**
     * Provides a pageable list of jobs.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.JobResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResourceList>): void;
}

/**
 * @class
 * JobCancellations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface JobCancellations {


    /**
     * Cancels the job. This is an asynchronous operation. To know the status of
     * the cancellation, call the GetCancelOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} jobName Name of the job to cancel.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    triggerWithHttpOperationResponse(vaultName: string, resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Cancels the job. This is an asynchronous operation. To know the status of
     * the cancellation, call the GetCancelOperationResult API.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} jobName Name of the job to cancel.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    trigger(vaultName: string, resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    trigger(vaultName: string, resourceGroupName: string, jobName: string, callback: ServiceCallback<void>): void;
    trigger(vaultName: string, resourceGroupName: string, jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * JobDetails
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface JobDetails {


    /**
     * Gets extended information associated with the job.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} jobName Name of the job associated with this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResource>>;

    /**
     * Gets extended information associated with the job.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} jobName Name of the job associated with this GET operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResource>;
    get(vaultName: string, resourceGroupName: string, jobName: string, callback: ServiceCallback<models.JobResource>): void;
    get(vaultName: string, resourceGroupName: string, jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResource>): void;
}

/**
 * @class
 * BackupOperationStatuses
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupOperationStatuses {


    /**
     * Gets the status of an operation such as triggering a backup or restore. The
     * status can be In progress, Completed or Failed. You can refer to the
     * OperationStatus enum for all the possible states of an operation. Some
     * operations create jobs. This method returns the list of jobs when the
     * operation is complete.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} operationId The ID of the operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationStatus>>;

    /**
     * Gets the status of an operation such as triggering a backup or restore. The
     * status can be In progress, Completed or Failed. You can refer to the
     * OperationStatus enum for all the possible states of an operation. Some
     * operations create jobs. This method returns the list of jobs when the
     * operation is complete.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} operationId The ID of the operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationStatus>;
    get(vaultName: string, resourceGroupName: string, operationId: string, callback: ServiceCallback<models.OperationStatus>): void;
    get(vaultName: string, resourceGroupName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationStatus>): void;
}

/**
 * @class
 * BackupOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupOperationResults {


    /**
     * Provides the status of the delete operations, for example, deleting a backup
     * item. Once the operation starts, the response status code is Accepted. The
     * response status code remains in this state until the operation reaches
     * completion. On successful completion, the status code changes to OK. This
     * method expects OperationID as an argument. OperationID is part of the
     * Location header of the operation response.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} operationId The ID of the operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Provides the status of the delete operations, for example, deleting a backup
     * item. Once the operation starts, the response status code is Accepted. The
     * response status code remains in this state until the operation reaches
     * completion. On successful completion, the status code changes to OK. This
     * method expects OperationID as an argument. OperationID is part of the
     * Location header of the operation response.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {string} operationId The ID of the operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    get(vaultName: string, resourceGroupName: string, operationId: string, callback: ServiceCallback<void>): void;
    get(vaultName: string, resourceGroupName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * BackupEngines
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupEngines {


    /**
     * The backup management servers registered to a Recovery Services vault. This
     * returns a pageable list of servers.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] Use this filter to choose the specific
     * backup management server. backupManagementType { AzureIaasVM, MAB, DPM,
     * AzureBackupServer, AzureSql }.
     *
     * @param {string} [options.skipToken] The Skip Token filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackupEngineBaseResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackupEngineBaseResourceList>>;

    /**
     * The backup management servers registered to a Recovery Services vault. This
     * returns a pageable list of servers.
     *
     * @param {string} vaultName The name of the Recovery Services vault.
     *
     * @param {string} resourceGroupName The name of the resource group associated
     * with the Recovery Services vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] Use this filter to choose the specific
     * backup management server. backupManagementType { AzureIaasVM, MAB, DPM,
     * AzureBackupServer, AzureSql }.
     *
     * @param {string} [options.skipToken] The Skip Token filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackupEngineBaseResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackupEngineBaseResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackupEngineBaseResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.BackupEngineBaseResourceList>;
    get(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.BackupEngineBaseResourceList>): void;
    get(vaultName: string, resourceGroupName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackupEngineBaseResourceList>): void;


    /**
     * The backup management servers registered to a Recovery Services vault. This
     * returns a pageable list of servers.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackupEngineBaseResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackupEngineBaseResourceList>>;

    /**
     * The backup management servers registered to a Recovery Services vault. This
     * returns a pageable list of servers.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackupEngineBaseResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackupEngineBaseResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackupEngineBaseResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BackupEngineBaseResourceList>;
    getNext(nextPageLink: string, callback: ServiceCallback<models.BackupEngineBaseResourceList>): void;
    getNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackupEngineBaseResourceList>): void;
}
