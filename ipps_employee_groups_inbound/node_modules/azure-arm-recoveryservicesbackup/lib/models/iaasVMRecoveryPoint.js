/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the IaasVMRecoveryPoint class.
 * @constructor
 * Azure VM (also known as IaaS VM) workload-specific backup copy.
 *
 * @member {string} [recoveryPointType] Type of the backup copy.
 *
 * @member {date} [recoveryPointTime] The date and time when the backup copy
 * was created.
 *
 * @member {string} [recoveryPointAdditionalInfo] Additional information
 * associated with this backup copy.
 *
 * @member {string} [sourceVMStorageType] The storage type for the VM whose
 * backup copy was created.
 *
 * @member {boolean} [isSourceVMEncrypted] Identifies whether the VM was
 * encrypted when the backup copy is created.
 *
 * @member {object} [keyAndSecret] Required details for recovering an encrypted
 * VM. Applicable only when IsSourceVMEncrypted is true.
 *
 * @member {object} [keyAndSecret.kekDetails] The Key Encryption Key (KEK) is
 * the encryption key for the Bitlocker Encryption Key (BEK).
 *
 * @member {string} [keyAndSecret.kekDetails.keyUrl] Key refers to the Key
 * Encryption Key (KEK). The KEK is the Key to unlock the Secret.
 *
 * @member {string} [keyAndSecret.kekDetails.keyVaultId] Key Vault ID
 * identifies where the KEK is stored.
 *
 * @member {string} [keyAndSecret.kekDetails.keyBackupData] Key Backup Data
 * refers to Key Encryption Key (KEK) data.
 *
 * @member {object} [keyAndSecret.bekDetails] BEK is Bitlocker Encrpytion Key.
 *
 * @member {string} [keyAndSecret.bekDetails.secretUrl] Secret refers to
 * Bitlocker Encryption Key (BEK). The Secret can be unlocked by the key (or
 * KEK).
 *
 * @member {string} [keyAndSecret.bekDetails.secretVaultId] ID of the Key Vault
 * where this Secret is stored.
 *
 * @member {string} [keyAndSecret.bekDetails.secretData] Bitlocker Encryption
 * Key (BEK) data.
 *
 * @member {boolean} [isInstantILRSessionActive] Answer to the question - Is
 * the session to recover items from this backup copy still active.
 *
 */
class IaasVMRecoveryPoint extends models['RecoveryPoint'] {
  constructor() {
    super();
  }

  /**
   * Defines the metadata of IaasVMRecoveryPoint
   *
   * @returns {object} metadata of IaasVMRecoveryPoint
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IaasVMRecoveryPoint',
      type: {
        name: 'Composite',
        className: 'IaasVMRecoveryPoint',
        modelProperties: {
          objectType: {
            required: true,
            serializedName: 'objectType',
            type: {
              name: 'String'
            }
          },
          recoveryPointType: {
            required: false,
            serializedName: 'recoveryPointType',
            type: {
              name: 'String'
            }
          },
          recoveryPointTime: {
            required: false,
            serializedName: 'recoveryPointTime',
            type: {
              name: 'DateTime'
            }
          },
          recoveryPointAdditionalInfo: {
            required: false,
            serializedName: 'recoveryPointAdditionalInfo',
            type: {
              name: 'String'
            }
          },
          sourceVMStorageType: {
            required: false,
            serializedName: 'sourceVMStorageType',
            type: {
              name: 'String'
            }
          },
          isSourceVMEncrypted: {
            required: false,
            serializedName: 'isSourceVMEncrypted',
            type: {
              name: 'Boolean'
            }
          },
          keyAndSecret: {
            required: false,
            serializedName: 'keyAndSecret',
            type: {
              name: 'Composite',
              className: 'KeyAndSecretDetails'
            }
          },
          isInstantILRSessionActive: {
            required: false,
            serializedName: 'isInstantILRSessionActive',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = IaasVMRecoveryPoint;
