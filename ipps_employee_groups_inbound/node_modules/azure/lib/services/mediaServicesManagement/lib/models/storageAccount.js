/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the StorageAccount class.
 * @constructor
 * The properties of a storage account associated with this resource.
 *
 * @member {string} id The id of the storage account resource. Media Services
 * relies on tables and queues as well as blobs, so the primary storage account
 * must be a Standard Storage account (either Microsoft.ClassicStorage or
 * Microsoft.Storage). Blob only storage accounts can be added as secondary
 * storage accounts (isPrimary false).
 *
 * @member {boolean} isPrimary Is this storage account resource the primary
 * storage account for the Media Service resource. Blob only storage must set
 * this to false.
 *
 */
class StorageAccount {
  constructor() {
  }

  /**
   * Defines the metadata of StorageAccount
   *
   * @returns {object} metadata of StorageAccount
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'StorageAccount',
      type: {
        name: 'Composite',
        className: 'StorageAccount',
        modelProperties: {
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          isPrimary: {
            required: true,
            serializedName: 'isPrimary',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = StorageAccount;
