/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ProtectionContainer class.
 * @constructor
 * The base class for a container with backup items. Containers with specific
 * workloads are derived from this class.
 *
 * @member {string} [friendlyName] Friendly name of the container.
 *
 * @member {string} [backupManagementType] The backup managemenent type for the
 * container. Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
 * 'AzureBackupServer', 'AzureSql'
 *
 * @member {string} [registrationStatus] The container's registration status
 * with the Recovery Services vault.
 *
 * @member {string} [healthStatus] The status of the container's health.
 *
 * @member {string} [containerType] The type assigned to the container. The
 * values to use for each of these propertes are:<br/> 1. Compute Azure VM is
 * Microsoft.Compute/virtualMachines<br/> 2. Classic Compute Azure VM is
 * Microsoft.ClassicCompute/virtualMachines<br/> 3. Windows machines (like
 * Azure Backup Server and DPM) is Windows<br/> 4. Azure SQL instance is
 * AzureSqlContainer.
 *
 * @member {string} protectableObjectType Polymorphic Discriminator
 *
 */
class ProtectionContainer {
  constructor() {
  }

  /**
   * Defines the metadata of ProtectionContainer
   *
   * @returns {object} metadata of ProtectionContainer
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ProtectionContainer',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'protectableObjectType',
          clientName: 'protectableObjectType'
        },
        uberParent: 'ProtectionContainer',
        className: 'ProtectionContainer',
        modelProperties: {
          friendlyName: {
            required: false,
            serializedName: 'friendlyName',
            type: {
              name: 'String'
            }
          },
          backupManagementType: {
            required: false,
            serializedName: 'backupManagementType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql' ]
            }
          },
          registrationStatus: {
            required: false,
            serializedName: 'registrationStatus',
            type: {
              name: 'String'
            }
          },
          healthStatus: {
            required: false,
            serializedName: 'healthStatus',
            type: {
              name: 'String'
            }
          },
          containerType: {
            required: false,
            readOnly: true,
            serializedName: 'containerType',
            type: {
              name: 'String'
            }
          },
          protectableObjectType: {
            required: true,
            serializedName: 'protectableObjectType',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ProtectionContainer;
