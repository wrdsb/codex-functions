/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the SynonymTokenFilter class.
 * @constructor
 * Matches single or multi-word synonyms in a token stream. This token filter
 * is implemented using Apache Lucene.
 *
 * @member {array} synonyms A list of synonyms in following one of two formats:
 * 1. incredible, unbelievable, fabulous => amazing - all terms on the left
 * side of => symbol will be replaced with all terms on its right side; 2.
 * incredible, unbelievable, fabulous, amazing - comma separated list of
 * equivalent words. Set the expand option to change how this list is
 * interpreted.
 *
 * @member {boolean} [ignoreCase] A value indicating whether to case-fold input
 * for matching. Default is false. Default value: false .
 *
 * @member {boolean} [expand] A value indicating whether all words in the list
 * of synonyms (if => notation is not used) will map to one another. If true,
 * all words in the list of synonyms (if => notation is not used) will map to
 * one another. The following list: incredible, unbelievable, fabulous, amazing
 * is equivalent to: incredible, unbelievable, fabulous, amazing => incredible,
 * unbelievable, fabulous, amazing. If false, the following list: incredible,
 * unbelievable, fabulous, amazing will be equivalent to: incredible,
 * unbelievable, fabulous, amazing => incredible. Default is true. Default
 * value: true .
 *
 */
class SynonymTokenFilter extends models['TokenFilter'] {
  constructor() {
    super();
  }

  /**
   * Defines the metadata of SynonymTokenFilter
   *
   * @returns {object} metadata of SynonymTokenFilter
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: '#Microsoft.Azure.Search.SynonymTokenFilter',
      type: {
        name: 'Composite',
        className: 'SynonymTokenFilter',
        modelProperties: {
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          odatatype: {
            required: true,
            serializedName: '@odata\\.type',
            type: {
              name: 'String'
            }
          },
          synonyms: {
            required: true,
            serializedName: 'synonyms',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          ignoreCase: {
            required: false,
            serializedName: 'ignoreCase',
            defaultValue: false,
            type: {
              name: 'Boolean'
            }
          },
          expand: {
            required: false,
            serializedName: 'expand',
            defaultValue: true,
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = SynonymTokenFilter;
