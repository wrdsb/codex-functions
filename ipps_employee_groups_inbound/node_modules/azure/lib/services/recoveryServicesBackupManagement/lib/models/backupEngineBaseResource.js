/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the BackupEngineBaseResource class.
 * @constructor
 * The base backup engine class. All workload-specific backup engines derive
 * from this class.
 *
 * @member {object} [properties]
 *
 * @member {string} [properties.friendlyName] The friendly name of the backup
 * engine.
 *
 * @member {string} [properties.backupManagementType] The type of backup
 * management associated with the backup engine. Possible values include:
 * 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql'
 *
 * @member {string} [properties.registrationStatus] The status of the backup
 * engine registration with the Recovery Services vault.
 *
 * @member {string} [properties.healthStatus] The backup status of the backup
 * engine.
 *
 * @member {boolean} [properties.canReRegister] The flag indicating whether the
 * backup engine be registered again, once the engine has been initially
 * registered.
 *
 * @member {string} [properties.backupEngineId] The ID of the backup engine.
 *
 * @member {string} [properties.backupEngineType] Polymorphic Discriminator
 *
 */
class BackupEngineBaseResource extends models['Resource'] {
  constructor() {
    super();
  }

  /**
   * Defines the metadata of BackupEngineBaseResource
   *
   * @returns {object} metadata of BackupEngineBaseResource
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'BackupEngineBaseResource',
      type: {
        name: 'Composite',
        className: 'BackupEngineBaseResource',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          eTag: {
            required: false,
            serializedName: 'eTag',
            type: {
              name: 'String'
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'backupEngineType',
                clientName: 'backupEngineType'
              },
              uberParent: 'BackupEngineBase',
              className: 'BackupEngineBase'
            }
          }
        }
      }
    };
  }
}

module.exports = BackupEngineBaseResource;
