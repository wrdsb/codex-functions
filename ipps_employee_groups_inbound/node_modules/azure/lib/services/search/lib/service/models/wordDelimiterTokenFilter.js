/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the WordDelimiterTokenFilter class.
 * @constructor
 * Splits words into subwords and performs optional transformations on subword
 * groups. This token filter is implemented using Apache Lucene.
 *
 * @member {boolean} [generateWordParts] A value indicating whether to generate
 * part words. If set, causes parts of words to be generated; for example
 * "AzureSearch" becomes "Azure" "Search". Default is true. Default value: true
 * .
 *
 * @member {boolean} [generateNumberParts] A value indicating whether to
 * generate number subwords. Default is true. Default value: true .
 *
 * @member {boolean} [catenateWords] A value indicating whether maximum runs of
 * word parts will be catenated. For example, if this is set to true,
 * "Azure-Search" becomes "AzureSearch". Default is false. Default value: false
 * .
 *
 * @member {boolean} [catenateNumbers] A value indicating whether maximum runs
 * of number parts will be catenated. For example, if this is set to true,
 * "1-2" becomes "12". Default is false. Default value: false .
 *
 * @member {boolean} [catenateAll] A value indicating whether all subword parts
 * will be catenated. For example, if this is set to true, "Azure-Search-1"
 * becomes "AzureSearch1". Default is false. Default value: false .
 *
 * @member {boolean} [splitOnCaseChange] A value indicating whether to split
 * words on caseChange. For example, if this is set to true, "AzureSearch"
 * becomes "Azure" "Search". Default is true. Default value: true .
 *
 * @member {boolean} [preserveOriginal] A value indicating whether original
 * words will be preserved and added to the subword list. Default is false.
 * Default value: false .
 *
 * @member {boolean} [splitOnNumerics] A value indicating whether to split on
 * numbers. For example, if this is set to true, "Azure1Search" becomes "Azure"
 * "1" "Search". Default is true. Default value: true .
 *
 * @member {boolean} [stemEnglishPossessive] A value indicating whether to
 * remove trailing "'s" for each subword. Default is true. Default value: true
 * .
 *
 * @member {array} [protectedWords] A list of tokens to protect from being
 * delimited.
 *
 */
class WordDelimiterTokenFilter extends models['TokenFilter'] {
  constructor() {
    super();
  }

  /**
   * Defines the metadata of WordDelimiterTokenFilter
   *
   * @returns {object} metadata of WordDelimiterTokenFilter
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: '#Microsoft.Azure.Search.WordDelimiterTokenFilter',
      type: {
        name: 'Composite',
        className: 'WordDelimiterTokenFilter',
        modelProperties: {
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          odatatype: {
            required: true,
            serializedName: '@odata\\.type',
            type: {
              name: 'String'
            }
          },
          generateWordParts: {
            required: false,
            serializedName: 'generateWordParts',
            defaultValue: true,
            type: {
              name: 'Boolean'
            }
          },
          generateNumberParts: {
            required: false,
            serializedName: 'generateNumberParts',
            defaultValue: true,
            type: {
              name: 'Boolean'
            }
          },
          catenateWords: {
            required: false,
            serializedName: 'catenateWords',
            defaultValue: false,
            type: {
              name: 'Boolean'
            }
          },
          catenateNumbers: {
            required: false,
            serializedName: 'catenateNumbers',
            defaultValue: false,
            type: {
              name: 'Boolean'
            }
          },
          catenateAll: {
            required: false,
            serializedName: 'catenateAll',
            defaultValue: false,
            type: {
              name: 'Boolean'
            }
          },
          splitOnCaseChange: {
            required: false,
            serializedName: 'splitOnCaseChange',
            defaultValue: true,
            type: {
              name: 'Boolean'
            }
          },
          preserveOriginal: {
            required: false,
            serializedName: 'preserveOriginal',
            defaultValue: false,
            type: {
              name: 'Boolean'
            }
          },
          splitOnNumerics: {
            required: false,
            serializedName: 'splitOnNumerics',
            defaultValue: true,
            type: {
              name: 'Boolean'
            }
          },
          stemEnglishPossessive: {
            required: false,
            serializedName: 'stemEnglishPossessive',
            defaultValue: true,
            type: {
              name: 'Boolean'
            }
          },
          protectedWords: {
            required: false,
            serializedName: 'protectedWords',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = WordDelimiterTokenFilter;
